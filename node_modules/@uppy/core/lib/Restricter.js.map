{"version":3,"names":["prettierBytes","match","defaultOptions","maxFileSize","minFileSize","maxTotalFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","requiredMetaFields","RestrictionError","Error","constructor","message","isUserFacing","file","isRestriction","Restricter","getOpts","i18n","opts","restrictions","Array","isArray","TypeError","validateAggregateRestrictions","existingFiles","addingFiles","nonGhostFiles","filter","f","isGhost","length","smart_count","totalFilesSize","reduce","total","size","addingFile","name","validateSingleFile","isCorrectFileType","some","type","includes","replace","extension","toLowerCase","slice","allowedFileTypesString","join","types","validate","forEach","validateMinNumberOfFiles","files","Object","keys","getMissingRequiredMetaFields","error","fileName","missingFields","field","hasOwn","meta","push"],"sources":["Restricter.js"],"sourcesContent":["/* eslint-disable max-classes-per-file, class-methods-use-this */\nimport prettierBytes from '@transloadit/prettier-bytes'\nimport match from 'mime-match'\n\nconst defaultOptions = {\n  maxFileSize: null,\n  minFileSize: null,\n  maxTotalFileSize: null,\n  maxNumberOfFiles: null,\n  minNumberOfFiles: null,\n  allowedFileTypes: null,\n  requiredMetaFields: [],\n}\n\nclass RestrictionError extends Error {\n  constructor (message, { isUserFacing = true, file } = {}) {\n    super(message)\n    this.isUserFacing = isUserFacing\n    if (file != null) this.file = file // only some restriction errors are related to a particular file\n  }\n\n  isRestriction = true\n}\n\nclass Restricter {\n  constructor (getOpts, i18n) {\n    this.i18n = i18n\n    this.getOpts = () => {\n      const opts = getOpts()\n\n      if (opts.restrictions.allowedFileTypes != null\n          && !Array.isArray(opts.restrictions.allowedFileTypes)) {\n        throw new TypeError('`restrictions.allowedFileTypes` must be an array')\n      }\n      return opts\n    }\n  }\n\n  // Because these operations are slow, we cannot run them for every file (if we are adding multiple files)\n  validateAggregateRestrictions (existingFiles, addingFiles) {\n    const { maxTotalFileSize, maxNumberOfFiles } = this.getOpts().restrictions\n\n    if (maxNumberOfFiles) {\n      const nonGhostFiles = existingFiles.filter(f => !f.isGhost)\n      if (nonGhostFiles.length + addingFiles.length > maxNumberOfFiles) {\n        throw new RestrictionError(`${this.i18n('youCanOnlyUploadX', { smart_count: maxNumberOfFiles })}`)\n      }\n    }\n\n    if (maxTotalFileSize) {\n      let totalFilesSize = existingFiles.reduce((total, f) => (total + f.size), 0)\n\n      for (const addingFile of addingFiles) {\n        if (addingFile.size != null) { // We can't check maxTotalFileSize if the size is unknown.\n          totalFilesSize += addingFile.size\n\n          if (totalFilesSize > maxTotalFileSize) {\n            throw new RestrictionError(this.i18n('exceedsSize', {\n              size: prettierBytes(maxTotalFileSize),\n              file: addingFile.name,\n            }))\n          }\n        }\n      }\n    }\n  }\n\n  validateSingleFile (file) {\n    const { maxFileSize, minFileSize, allowedFileTypes } = this.getOpts().restrictions\n\n    if (allowedFileTypes) {\n      const isCorrectFileType = allowedFileTypes.some((type) => {\n        // check if this is a mime-type\n        if (type.includes('/')) {\n          if (!file.type) return false\n          return match(file.type.replace(/;.*?$/, ''), type)\n        }\n\n        // otherwise this is likely an extension\n        if (type[0] === '.' && file.extension) {\n          return file.extension.toLowerCase() === type.slice(1).toLowerCase()\n        }\n        return false\n      })\n\n      if (!isCorrectFileType) {\n        const allowedFileTypesString = allowedFileTypes.join(', ')\n        throw new RestrictionError(this.i18n('youCanOnlyUploadFileTypes', { types: allowedFileTypesString }), { file })\n      }\n    }\n\n    // We can't check maxFileSize if the size is unknown.\n    if (maxFileSize && file.size != null && file.size > maxFileSize) {\n      throw new RestrictionError(this.i18n('exceedsSize', {\n        size: prettierBytes(maxFileSize),\n        file: file.name,\n      }), { file })\n    }\n\n    // We can't check minFileSize if the size is unknown.\n    if (minFileSize && file.size != null && file.size < minFileSize) {\n      throw new RestrictionError(this.i18n('inferiorSize', {\n        size: prettierBytes(minFileSize),\n      }), { file })\n    }\n  }\n\n  validate (existingFiles, addingFiles) {\n    addingFiles.forEach((addingFile) => {\n      this.validateSingleFile(addingFile)\n    })\n    this.validateAggregateRestrictions(existingFiles, addingFiles)\n  }\n\n  validateMinNumberOfFiles (files) {\n    const { minNumberOfFiles } = this.getOpts().restrictions\n    if (Object.keys(files).length < minNumberOfFiles) {\n      throw new RestrictionError(this.i18n('youHaveToAtLeastSelectX', { smart_count: minNumberOfFiles }))\n    }\n  }\n\n  getMissingRequiredMetaFields (file) {\n    const error = new RestrictionError(this.i18n('missingRequiredMetaFieldOnFile', { fileName: file.name }))\n    const { requiredMetaFields } = this.getOpts().restrictions\n    const missingFields = []\n\n    for (const field of requiredMetaFields) {\n      if (!Object.hasOwn(file.meta, field) || file.meta[field] === '') {\n        missingFields.push(field)\n      }\n    }\n\n    return { missingFields, error }\n  }\n}\n\nexport { Restricter, defaultOptions, RestrictionError }\n"],"mappings":"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"}