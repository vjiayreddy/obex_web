{"version":3,"names":["BasePlugin","nanoid","Provider","RequestClient","Socket","emitSocketProgress","getSocketHost","EventTracker","ProgressTimeout","RateLimitedQueue","internalRateLimitedQueue","NetworkError","isNetworkError","filterNonFailedFiles","filterFilesToEmitUploadStarted","packageJson","locale","buildResponseError","xhr","err","error","Error","Object","assign","data","request","setTypeInBlob","file","dataWithUpdatedType","slice","size","meta","type","XHRUpload","constructor","uppy","opts","getOptions","Client","remote","providerOptions","provider","client","allowedMetaFields","Array","isArray","keys","res","post","url","body","protocol","endpoint","fieldname","fieldName","metadata","fromEntries","map","name","httpMethod","method","useFormData","formData","headers","token","fileIDs","length","log","limit","files","getFilesByIds","filesFiltered","filesToEmit","emit","bundle","isSomeFileRemote","some","isRemote","TypeError","id","title","defaultLocale","defaultOptions","responseUrlFieldName","timeout","withCredentials","responseType","getResponseData","responseText","parsedResponse","JSON","parse","getResponseError","_","response","validateStatus","status","i18nInit","requests","undefined","uploaderEvents","create","wrapPromiseFunction","priority","overrides","getState","xhrUpload","addMetadata","forEach","item","append","createFormDataUpload","formPost","FormData","createBundledUpload","options","connectToServerSocket","Promise","resolve","reject","serverToken","host","companionUrl","socket","createSocket","target","on","progressData","uploadURL","uploadResp","queuedRequest","done","close","remove","errData","resp","message","cause","run","isPaused","send","onFileRemove","abort","onCancelAll","reason","onRetryRequest","onRetry","onRetryAll","catch","fileID","cb","targetFileID","getFile","eventHandler","install","capabilities","setState","individualCancellation","addUploader","uninstall","removeUploader","current","total","XMLHttpRequest","timer","i18n","seconds","Math","ceil","upload","addEventListener","ev","loaded","progress","lengthComputable","uploader","bytesUploaded","bytesTotal","open","toUpperCase","currentOpts","header","setRequestHeader","setFileState","optsFromState","emitError","allSettled","i","parseInt","VERSION","version"],"sources":["index.js"],"sourcesContent":["import BasePlugin from '@uppy/core/lib/BasePlugin.js'\nimport { nanoid } from 'nanoid/non-secure'\nimport { Provider, RequestClient, Socket } from '@uppy/companion-client'\nimport emitSocketProgress from '@uppy/utils/lib/emitSocketProgress'\nimport getSocketHost from '@uppy/utils/lib/getSocketHost'\nimport EventTracker from '@uppy/utils/lib/EventTracker'\nimport ProgressTimeout from '@uppy/utils/lib/ProgressTimeout'\nimport { RateLimitedQueue, internalRateLimitedQueue } from '@uppy/utils/lib/RateLimitedQueue'\nimport NetworkError from '@uppy/utils/lib/NetworkError'\nimport isNetworkError from '@uppy/utils/lib/isNetworkError'\nimport { filterNonFailedFiles, filterFilesToEmitUploadStarted } from '@uppy/utils/lib/fileFilters'\n\nimport packageJson from '../package.json'\nimport locale from './locale.js'\n\nfunction buildResponseError (xhr, err) {\n  let error = err\n  // No error message\n  if (!error) error = new Error('Upload error')\n  // Got an error message string\n  if (typeof error === 'string') error = new Error(error)\n  // Got something else\n  if (!(error instanceof Error)) {\n    error = Object.assign(new Error('Upload error'), { data: error })\n  }\n\n  if (isNetworkError(xhr)) {\n    error = new NetworkError(error, xhr)\n    return error\n  }\n\n  error.request = xhr\n  return error\n}\n\n/**\n * Set `data.type` in the blob to `file.meta.type`,\n * because we might have detected a more accurate file type in Uppy\n * https://stackoverflow.com/a/50875615\n *\n * @param {object} file File object with `data`, `size` and `meta` properties\n * @returns {object} blob updated with the new `type` set from `file.meta.type`\n */\nfunction setTypeInBlob (file) {\n  const dataWithUpdatedType = file.data.slice(0, file.data.size, file.meta.type)\n  return dataWithUpdatedType\n}\n\nexport default class XHRUpload extends BasePlugin {\n  // eslint-disable-next-line global-require\n  static VERSION = packageJson.version\n\n  #queueRequestSocketToken\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'uploader'\n    this.id = this.opts.id || 'XHRUpload'\n    this.title = 'XHRUpload'\n\n    this.defaultLocale = locale\n\n    // Default options\n    const defaultOptions = {\n      formData: true,\n      fieldName: opts.bundle ? 'files[]' : 'file',\n      method: 'post',\n      allowedMetaFields: null,\n      responseUrlFieldName: 'url',\n      bundle: false,\n      headers: {},\n      timeout: 30 * 1000,\n      limit: 5,\n      withCredentials: false,\n      responseType: '',\n      /**\n       * @param {string} responseText the response body string\n       */\n      getResponseData (responseText) {\n        let parsedResponse = {}\n        try {\n          parsedResponse = JSON.parse(responseText)\n        } catch (err) {\n          uppy.log(err)\n        }\n\n        return parsedResponse\n      },\n      /**\n       *\n       * @param {string} _ the response body string\n       * @param {XMLHttpRequest | respObj} response the response object (XHR or similar)\n       */\n      getResponseError (_, response) {\n        let error = new Error('Upload error')\n\n        if (isNetworkError(response)) {\n          error = new NetworkError(error, response)\n        }\n\n        return error\n      },\n      /**\n       * Check if the response from the upload endpoint indicates that the upload was successful.\n       *\n       * @param {number} status the response status code\n       */\n      validateStatus (status) {\n        return status >= 200 && status < 300\n      },\n    }\n\n    this.opts = { ...defaultOptions, ...opts }\n    this.i18nInit()\n\n    // Simultaneous upload limiting is shared across all uploads with this plugin.\n    if (internalRateLimitedQueue in this.opts) {\n      this.requests = this.opts[internalRateLimitedQueue]\n    } else {\n      this.requests = new RateLimitedQueue(this.opts.limit)\n    }\n\n    if (this.opts.bundle && !this.opts.formData) {\n      throw new Error('`opts.formData` must be true when `opts.bundle` is enabled.')\n    }\n\n    if (opts?.allowedMetaFields === undefined && 'metaFields' in this.opts) {\n      throw new Error('The `metaFields` option has been renamed to `allowedMetaFields`.')\n    }\n\n    this.uploaderEvents = Object.create(null)\n    this.#queueRequestSocketToken = this.requests.wrapPromiseFunction(this.#requestSocketToken, { priority: -1 })\n  }\n\n  getOptions (file) {\n    const overrides = this.uppy.getState().xhrUpload\n    const { headers } = this.opts\n\n    const opts = {\n      ...this.opts,\n      ...(overrides || {}),\n      ...(file.xhrUpload || {}),\n      headers: {},\n    }\n    // Support for `headers` as a function, only in the XHRUpload settings.\n    // Options set by other plugins in Uppy state or on the files themselves are still merged in afterward.\n    //\n    // ```js\n    // headers: (file) => ({ expires: file.meta.expires })\n    // ```\n    if (typeof headers === 'function') {\n      opts.headers = headers(file)\n    } else {\n      Object.assign(opts.headers, this.opts.headers)\n    }\n\n    if (overrides) {\n      Object.assign(opts.headers, overrides.headers)\n    }\n    if (file.xhrUpload) {\n      Object.assign(opts.headers, file.xhrUpload.headers)\n    }\n\n    return opts\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addMetadata (formData, meta, opts) {\n    const allowedMetaFields = Array.isArray(opts.allowedMetaFields)\n      ? opts.allowedMetaFields\n      : Object.keys(meta) // Send along all fields by default.\n\n    allowedMetaFields.forEach((item) => {\n      formData.append(item, meta[item])\n    })\n  }\n\n  createFormDataUpload (file, opts) {\n    const formPost = new FormData()\n\n    this.addMetadata(formPost, file.meta, opts)\n\n    const dataWithUpdatedType = setTypeInBlob(file)\n\n    if (file.name) {\n      formPost.append(opts.fieldName, dataWithUpdatedType, file.meta.name)\n    } else {\n      formPost.append(opts.fieldName, dataWithUpdatedType)\n    }\n\n    return formPost\n  }\n\n  createBundledUpload (files, opts) {\n    const formPost = new FormData()\n\n    const { meta } = this.uppy.getState()\n    this.addMetadata(formPost, meta, opts)\n\n    files.forEach((file) => {\n      const options = this.getOptions(file)\n\n      const dataWithUpdatedType = setTypeInBlob(file)\n\n      if (file.name) {\n        formPost.append(options.fieldName, dataWithUpdatedType, file.name)\n      } else {\n        formPost.append(options.fieldName, dataWithUpdatedType)\n      }\n    })\n\n    return formPost\n  }\n\n  async #upload (file, current, total) {\n    const opts = this.getOptions(file)\n\n    this.uppy.log(`uploading ${current} of ${total}`)\n    return new Promise((resolve, reject) => {\n      const data = opts.formData\n        ? this.createFormDataUpload(file, opts)\n        : file.data\n\n      const xhr = new XMLHttpRequest()\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n      let queuedRequest\n\n      const timer = new ProgressTimeout(opts.timeout, () => {\n        const error = new Error(this.i18n('uploadStalled', { seconds: Math.ceil(opts.timeout / 1000) }))\n        this.uppy.emit('upload-stalled', error, [file])\n      })\n\n      const id = nanoid()\n\n      xhr.upload.addEventListener('loadstart', () => {\n        this.uppy.log(`[XHRUpload] ${id} started`)\n      })\n\n      xhr.upload.addEventListener('progress', (ev) => {\n        this.uppy.log(`[XHRUpload] ${id} progress: ${ev.loaded} / ${ev.total}`)\n        // Begin checking for timeouts when progress starts, instead of loading,\n        // to avoid timing out requests on browser concurrency queue\n        timer.progress()\n\n        if (ev.lengthComputable) {\n          this.uppy.emit('upload-progress', file, {\n            uploader: this,\n            bytesUploaded: ev.loaded,\n            bytesTotal: ev.total,\n          })\n        }\n      })\n\n      xhr.addEventListener('load', () => {\n        this.uppy.log(`[XHRUpload] ${id} finished`)\n        timer.done()\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        if (opts.validateStatus(xhr.status, xhr.responseText, xhr)) {\n          const body = opts.getResponseData(xhr.responseText, xhr)\n          const uploadURL = body[opts.responseUrlFieldName]\n\n          const uploadResp = {\n            status: xhr.status,\n            body,\n            uploadURL,\n          }\n\n          this.uppy.emit('upload-success', file, uploadResp)\n\n          if (uploadURL) {\n            this.uppy.log(`Download ${file.name} from ${uploadURL}`)\n          }\n\n          return resolve(file)\n        }\n        const body = opts.getResponseData(xhr.responseText, xhr)\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\n\n        const response = {\n          status: xhr.status,\n          body,\n        }\n\n        this.uppy.emit('upload-error', file, error, response)\n        return reject(error)\n      })\n\n      xhr.addEventListener('error', () => {\n        this.uppy.log(`[XHRUpload] ${id} errored`)\n        timer.done()\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\n        this.uppy.emit('upload-error', file, error)\n        return reject(error)\n      })\n\n      xhr.open(opts.method.toUpperCase(), opts.endpoint, true)\n      // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called.\n      xhr.withCredentials = opts.withCredentials\n      if (opts.responseType !== '') {\n        xhr.responseType = opts.responseType\n      }\n\n      queuedRequest = this.requests.run(() => {\n        // When using an authentication system like JWT, the bearer token goes as a header. This\n        // header needs to be fresh each time the token is refreshed so computing and setting the\n        // headers just before the upload starts enables this kind of authentication to work properly.\n        // Otherwise, half-way through the list of uploads the token could be stale and the upload would fail.\n        const currentOpts = this.getOptions(file)\n\n        Object.keys(currentOpts.headers).forEach((header) => {\n          xhr.setRequestHeader(header, currentOpts.headers[header])\n        })\n\n        xhr.send(data)\n\n        return () => {\n          timer.done()\n          xhr.abort()\n        }\n      })\n\n      this.onFileRemove(file.id, () => {\n        queuedRequest.abort()\n        reject(new Error('File removed'))\n      })\n\n      this.onCancelAll(file.id, ({ reason }) => {\n        if (reason === 'user') {\n          queuedRequest.abort()\n        }\n        reject(new Error('Upload cancelled'))\n      })\n    })\n  }\n\n  #requestSocketToken = async (file) => {\n    const opts = this.getOptions(file)\n    const Client = file.remote.providerOptions.provider ? Provider : RequestClient\n    const client = new Client(this.uppy, file.remote.providerOptions)\n    const allowedMetaFields = Array.isArray(opts.allowedMetaFields)\n      ? opts.allowedMetaFields\n      // Send along all fields by default.\n      : Object.keys(file.meta)\n    const res = await client.post(file.remote.url, {\n      ...file.remote.body,\n      protocol: 'multipart',\n      endpoint: opts.endpoint,\n      size: file.data.size,\n      fieldname: opts.fieldName,\n      metadata: Object.fromEntries(allowedMetaFields.map(name => [name, file.meta[name]])),\n      httpMethod: opts.method,\n      useFormData: opts.formData,\n      headers: opts.headers,\n    })\n    return res.token\n  }\n\n  // NOTE! Keep this duplicated code in sync with other plugins\n  // TODO we should probably abstract this into a common function\n  async #uploadRemote (file) {\n    // TODO: we could rewrite this to use server-sent events instead of creating WebSockets.\n    try {\n      if (file.serverToken) {\n        return await this.connectToServerSocket(file)\n      }\n      const serverToken = await this.#queueRequestSocketToken(file)\n\n      if (!this.uppy.getState().files[file.id]) return undefined\n\n      this.uppy.setFileState(file.id, { serverToken })\n      return await this.connectToServerSocket(this.uppy.getFile(file.id))\n    } catch (err) {\n      this.uppy.setFileState(file.id, { serverToken: undefined })\n      this.uppy.emit('upload-error', file, err)\n      throw err\n    }\n  }\n\n  async connectToServerSocket (file) {\n    return new Promise((resolve, reject) => {\n      const opts = this.getOptions(file)\n      const token = file.serverToken\n      const host = getSocketHost(file.remote.companionUrl)\n      let socket\n\n      const createSocket = () => {\n        if (socket != null) return\n\n        socket = new Socket({ target: `${host}/api/${token}` })\n\n        socket.on('progress', (progressData) => emitSocketProgress(this, progressData, file))\n\n        socket.on('success', (data) => {\n          const body = opts.getResponseData(data.response.responseText, data.response)\n          const uploadURL = body[opts.responseUrlFieldName]\n\n          const uploadResp = {\n            status: data.response.status,\n            body,\n            uploadURL,\n          }\n\n          this.uppy.emit('upload-success', file, uploadResp)\n          queuedRequest.done() // eslint-disable-line no-use-before-define\n          socket.close()\n          if (this.uploaderEvents[file.id]) {\n            this.uploaderEvents[file.id].remove()\n            this.uploaderEvents[file.id] = null\n          }\n          return resolve()\n        })\n\n        socket.on('error', (errData) => {\n          const resp = errData.response\n          const error = resp\n            ? opts.getResponseError(resp.responseText, resp)\n            : Object.assign(new Error(errData.error.message), { cause: errData.error })\n          this.uppy.emit('upload-error', file, error)\n          queuedRequest.done() // eslint-disable-line no-use-before-define\n          if (this.uploaderEvents[file.id]) {\n            this.uploaderEvents[file.id].remove()\n            this.uploaderEvents[file.id] = null\n          }\n          reject(error)\n        })\n      }\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n\n      let queuedRequest = this.requests.run(() => {\n        if (file.isPaused) {\n          socket?.send('pause', {})\n        } else {\n          createSocket()\n        }\n\n        return () => socket.close()\n      })\n\n      this.onFileRemove(file.id, () => {\n        socket?.send('cancel', {})\n        queuedRequest.abort()\n        resolve(`upload ${file.id} was removed`)\n      })\n\n      this.onCancelAll(file.id, ({ reason } = {}) => {\n        if (reason === 'user') {\n          socket?.send('cancel', {})\n          queuedRequest.abort()\n        }\n        resolve(`upload ${file.id} was canceled`)\n      })\n\n      const onRetryRequest = () => {\n        if (socket == null) {\n          queuedRequest.abort()\n        } else {\n          socket.send('pause', {})\n          queuedRequest.done()\n        }\n        queuedRequest = this.requests.run(() => {\n          if (!file.isPaused) {\n            if (socket == null) {\n              createSocket()\n            } else {\n              socket.send('resume', {})\n            }\n          }\n\n          return () => socket.close()\n        })\n      }\n      this.onRetry(file.id, onRetryRequest)\n      this.onRetryAll(file.id, onRetryRequest)\n    }).catch((err) => {\n      this.uppy.emit('upload-error', file, err)\n      return Promise.reject(err)\n    })\n  }\n\n  #uploadBundle (files) {\n    return new Promise((resolve, reject) => {\n      const { endpoint } = this.opts\n      const { method } = this.opts\n\n      const optsFromState = this.uppy.getState().xhrUpload\n      const formData = this.createBundledUpload(files, {\n        ...this.opts,\n        ...(optsFromState || {}),\n      })\n\n      const xhr = new XMLHttpRequest()\n\n      const emitError = (error) => {\n        files.forEach((file) => {\n          this.uppy.emit('upload-error', file, error)\n        })\n      }\n\n      const timer = new ProgressTimeout(this.opts.timeout, () => {\n        const error = new Error(this.i18n('uploadStalled', { seconds: Math.ceil(this.opts.timeout / 1000) }))\n        this.uppy.emit('upload-stalled', error, files)\n      })\n\n      xhr.upload.addEventListener('loadstart', () => {\n        this.uppy.log('[XHRUpload] started uploading bundle')\n        timer.progress()\n      })\n\n      xhr.upload.addEventListener('progress', (ev) => {\n        timer.progress()\n\n        if (!ev.lengthComputable) return\n\n        files.forEach((file) => {\n          this.uppy.emit('upload-progress', file, {\n            uploader: this,\n            bytesUploaded: (ev.loaded / ev.total) * file.size,\n            bytesTotal: file.size,\n          })\n        })\n      })\n\n      xhr.addEventListener('load', (ev) => {\n        timer.done()\n\n        if (this.opts.validateStatus(ev.target.status, xhr.responseText, xhr)) {\n          const body = this.opts.getResponseData(xhr.responseText, xhr)\n          const uploadResp = {\n            status: ev.target.status,\n            body,\n          }\n          files.forEach((file) => {\n            this.uppy.emit('upload-success', file, uploadResp)\n          })\n          return resolve()\n        }\n\n        const error = this.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error')\n        error.request = xhr\n        emitError(error)\n        return reject(error)\n      })\n\n      xhr.addEventListener('error', () => {\n        timer.done()\n\n        const error = this.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error')\n        emitError(error)\n        return reject(error)\n      })\n\n      this.uppy.on('cancel-all', ({ reason } = {}) => {\n        if (reason !== 'user') return\n        timer.done()\n        xhr.abort()\n      })\n\n      xhr.open(method.toUpperCase(), endpoint, true)\n      // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called.\n      xhr.withCredentials = this.opts.withCredentials\n      if (this.opts.responseType !== '') {\n        xhr.responseType = this.opts.responseType\n      }\n\n      Object.keys(this.opts.headers).forEach((header) => {\n        xhr.setRequestHeader(header, this.opts.headers[header])\n      })\n\n      xhr.send(formData)\n    })\n  }\n\n  async #uploadFiles (files) {\n    await Promise.allSettled(files.map((file, i) => {\n      const current = parseInt(i, 10) + 1\n      const total = files.length\n\n      if (file.isRemote) {\n        return this.#uploadRemote(file, current, total)\n      }\n      return this.#upload(file, current, total)\n    }))\n  }\n\n  onFileRemove (fileID, cb) {\n    this.uploaderEvents[fileID].on('file-removed', (file) => {\n      if (fileID === file.id) cb(file.id)\n    })\n  }\n\n  onRetry (fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-retry', (targetFileID) => {\n      if (fileID === targetFileID) {\n        cb()\n      }\n    })\n  }\n\n  onRetryAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('retry-all', () => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  onCancelAll (fileID, eventHandler) {\n    this.uploaderEvents[fileID].on('cancel-all', (...args) => {\n      if (!this.uppy.getFile(fileID)) return\n      eventHandler(...args)\n    })\n  }\n\n  #handleUpload = async (fileIDs) => {\n    if (fileIDs.length === 0) {\n      this.uppy.log('[XHRUpload] No files to upload!')\n      return\n    }\n\n    // No limit configured by the user, and no RateLimitedQueue passed in by a \"parent\" plugin\n    // (basically just AwsS3) using the internal symbol\n    if (this.opts.limit === 0 && !this.opts[internalRateLimitedQueue]) {\n      this.uppy.log(\n        '[XHRUpload] When uploading multiple files at once, consider setting the `limit` option (to `10` for example), to limit the number of concurrent uploads, which helps prevent memory and network issues: https://uppy.io/docs/xhr-upload/#limit-0',\n        'warning',\n      )\n    }\n\n    this.uppy.log('[XHRUpload] Uploading...')\n    const files = this.uppy.getFilesByIds(fileIDs)\n\n    const filesFiltered = filterNonFailedFiles(files)\n    const filesToEmit = filterFilesToEmitUploadStarted(filesFiltered)\n    this.uppy.emit('upload-start', filesToEmit)\n\n    if (this.opts.bundle) {\n      // if bundle: true, we don’t support remote uploads\n      const isSomeFileRemote = filesFiltered.some(file => file.isRemote)\n      if (isSomeFileRemote) {\n        throw new Error('Can’t upload remote files when the `bundle: true` option is set')\n      }\n\n      if (typeof this.opts.headers === 'function') {\n        throw new TypeError('`headers` may not be a function when the `bundle: true` option is set')\n      }\n\n      await this.#uploadBundle(filesFiltered)\n    } else {\n      await this.#uploadFiles(filesFiltered)\n    }\n  }\n\n  install () {\n    if (this.opts.bundle) {\n      const { capabilities } = this.uppy.getState()\n      this.uppy.setState({\n        capabilities: {\n          ...capabilities,\n          individualCancellation: false,\n        },\n      })\n    }\n\n    this.uppy.addUploader(this.#handleUpload)\n  }\n\n  uninstall () {\n    if (this.opts.bundle) {\n      const { capabilities } = this.uppy.getState()\n      this.uppy.setState({\n        capabilities: {\n          ...capabilities,\n          individualCancellation: true,\n        },\n      })\n    }\n\n    this.uppy.removeUploader(this.#handleUpload)\n  }\n}\n"],"mappings":"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"}