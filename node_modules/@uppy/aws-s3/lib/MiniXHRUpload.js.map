{"version":3,"names":["nanoid","Provider","RequestClient","Socket","emitSocketProgress","getSocketHost","EventTracker","ProgressTimeout","ErrorWithCause","NetworkError","isNetworkError","internalRateLimitedQueue","buildResponseError","xhr","error","err","cause","request","setTypeInBlob","file","dataWithUpdatedType","data","slice","size","meta","type","addMetadata","formData","opts","allowedMetaFields","Array","isArray","Object","keys","forEach","item","append","createFormDataUpload","formPost","FormData","name","fieldName","createBareUpload","MiniXHRUpload","constructor","uppy","Client","remote","providerOptions","provider","client","tus","assign","res","post","url","body","protocol","endpoint","fieldname","metadata","fromEntries","map","httpMethod","method","useFormData","headers","token","validateStatus","status","requests","uploaderEvents","create","i18n","wrapPromiseFunction","priority","uploadFile","id","current","total","getFile","Error","isRemote","connectToServerSocket","Promise","resolve","reject","serverToken","host","companionUrl","socket","createSocket","target","on","progressData","getResponseData","response","responseText","uploadURL","responseUrlFieldName","uploadResp","bytesUploaded","emit","queuedRequest","done","close","remove","errData","resp","getResponseError","message","run","isPaused","send","abort","reason","onRetryRequest","catch","overrides","getState","xhrUpload","eventName","fileID","eventHandler","fileOrID","log","XMLHttpRequest","timer","timeout","seconds","Math","ceil","upload","addEventListener","ev","loaded","progress","lengthComputable","uploader","bytesTotal","open","toUpperCase","withCredentials","Boolean","responseType","header","setRequestHeader","files","undefined","setFileState"],"sources":["MiniXHRUpload.js"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure'\nimport { Provider, RequestClient, Socket } from '@uppy/companion-client'\nimport emitSocketProgress from '@uppy/utils/lib/emitSocketProgress'\nimport getSocketHost from '@uppy/utils/lib/getSocketHost'\nimport EventTracker from '@uppy/utils/lib/EventTracker'\nimport ProgressTimeout from '@uppy/utils/lib/ProgressTimeout'\nimport ErrorWithCause from '@uppy/utils/lib/ErrorWithCause'\nimport NetworkError from '@uppy/utils/lib/NetworkError'\nimport isNetworkError from '@uppy/utils/lib/isNetworkError'\nimport { internalRateLimitedQueue } from '@uppy/utils/lib/RateLimitedQueue'\n\n// See XHRUpload\nfunction buildResponseError (xhr, error) {\n  if (isNetworkError(xhr)) return new NetworkError(error, xhr)\n\n  const err = new ErrorWithCause('Upload error', { cause: error })\n  err.request = xhr\n  return err\n}\n\n// See XHRUpload\nfunction setTypeInBlob (file) {\n  const dataWithUpdatedType = file.data.slice(0, file.data.size, file.meta.type)\n  return dataWithUpdatedType\n}\n\nfunction addMetadata (formData, meta, opts) {\n  const allowedMetaFields = Array.isArray(opts.allowedMetaFields)\n    ? opts.allowedMetaFields\n    // Send along all fields by default.\n    : Object.keys(meta)\n  allowedMetaFields.forEach((item) => {\n    formData.append(item, meta[item])\n  })\n}\n\nfunction createFormDataUpload (file, opts) {\n  const formPost = new FormData()\n\n  addMetadata(formPost, file.meta, opts)\n\n  const dataWithUpdatedType = setTypeInBlob(file)\n\n  if (file.name) {\n    formPost.append(opts.fieldName, dataWithUpdatedType, file.meta.name)\n  } else {\n    formPost.append(opts.fieldName, dataWithUpdatedType)\n  }\n\n  return formPost\n}\n\nconst createBareUpload = file => file.data\n\nexport default class MiniXHRUpload {\n  #queueRequestSocketToken\n\n  constructor (uppy, opts) {\n    this.uppy = uppy\n    this.opts = {\n      validateStatus (status) {\n        return status >= 200 && status < 300\n      },\n      ...opts,\n    }\n\n    this.requests = opts[internalRateLimitedQueue]\n    this.uploaderEvents = Object.create(null)\n    this.i18n = opts.i18n\n\n    this.#queueRequestSocketToken = this.requests.wrapPromiseFunction(this.#requestSocketToken, { priority: -1 })\n  }\n\n  #getOptions (file) {\n    const { uppy } = this\n\n    const overrides = uppy.getState().xhrUpload\n    const opts = {\n      ...this.opts,\n      ...(overrides || {}),\n      ...(file.xhrUpload || {}),\n      headers: {\n        ...this.opts.headers,\n        ...overrides?.headers,\n        ...file.xhrUpload?.headers,\n      },\n    }\n\n    return opts\n  }\n\n  uploadFile (id, current, total) {\n    const file = this.uppy.getFile(id)\n    if (file.error) {\n      throw new Error(file.error)\n    } else if (file.isRemote) {\n      return this.#uploadRemoteFile(file, current, total)\n    }\n    return this.#uploadLocalFile(file, current, total)\n  }\n\n  #addEventHandlerForFile (eventName, fileID, eventHandler) {\n    this.uploaderEvents[fileID].on(eventName, (fileOrID) => {\n      // TODO (major): refactor Uppy events to consistently send file objects (or consistently IDs)\n      // We created a generic `addEventListenerForFile` but not all events\n      // use file IDs, some use files, so we need to do this weird check.\n      const id = fileOrID?.id ?? fileOrID\n      if (fileID === id) eventHandler()\n    })\n  }\n\n  #addEventHandlerIfFileStillExists (eventName, fileID, eventHandler) {\n    this.uploaderEvents[fileID].on(eventName, (...args) => {\n      if (this.uppy.getFile(fileID)) eventHandler(...args)\n    })\n  }\n\n  #uploadLocalFile (file, current, total) {\n    const opts = this.#getOptions(file)\n\n    this.uppy.log(`uploading ${current} of ${total}`)\n    return new Promise((resolve, reject) => {\n      // This is done in index.js in the S3 plugin.\n      // this.uppy.emit('upload-started', file)\n\n      const data = opts.formData\n        ? createFormDataUpload(file, opts)\n        : createBareUpload(file, opts)\n\n      const xhr = new XMLHttpRequest()\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n\n      const timer = new ProgressTimeout(opts.timeout, () => {\n        xhr.abort()\n        // eslint-disable-next-line no-use-before-define\n        queuedRequest.done()\n        const error = new Error(this.i18n('timedOut', { seconds: Math.ceil(opts.timeout / 1000) }))\n        this.uppy.emit('upload-error', file, error)\n        reject(error)\n      })\n\n      const id = nanoid()\n\n      xhr.upload.addEventListener('loadstart', () => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} started`)\n      })\n\n      xhr.upload.addEventListener('progress', (ev) => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} progress: ${ev.loaded} / ${ev.total}`)\n        // Begin checking for timeouts when progress starts, instead of loading,\n        // to avoid timing out requests on browser concurrency queue\n        timer.progress()\n\n        if (ev.lengthComputable) {\n          this.uppy.emit('upload-progress', file, {\n            uploader: this,\n            bytesUploaded: ev.loaded,\n            bytesTotal: ev.total,\n          })\n        }\n      })\n\n      xhr.addEventListener('load', (ev) => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} finished`)\n        timer.done()\n        // eslint-disable-next-line no-use-before-define\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        if (opts.validateStatus(ev.target.status, xhr.responseText, xhr)) {\n          const body = opts.getResponseData(xhr.responseText, xhr)\n          const uploadURL = body[opts.responseUrlFieldName]\n\n          const uploadResp = {\n            status: ev.target.status,\n            body,\n            uploadURL,\n          }\n\n          this.uppy.emit('upload-success', file, uploadResp)\n\n          if (uploadURL) {\n            this.uppy.log(`Download ${file.name} from ${uploadURL}`)\n          }\n\n          return resolve(file)\n        }\n        const body = opts.getResponseData(xhr.responseText, xhr)\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\n\n        const response = {\n          status: ev.target.status,\n          body,\n        }\n\n        this.uppy.emit('upload-error', file, error, response)\n        return reject(error)\n      })\n\n      xhr.addEventListener('error', () => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} errored`)\n        timer.done()\n        // eslint-disable-next-line no-use-before-define\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\n        this.uppy.emit('upload-error', file, error)\n        return reject(error)\n      })\n\n      xhr.open(opts.method.toUpperCase(), opts.endpoint, true)\n      // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called. Itâ€™s important to set withCredentials\n      // to a boolean, otherwise React Native crashes\n      xhr.withCredentials = Boolean(opts.withCredentials)\n      if (opts.responseType !== '') {\n        xhr.responseType = opts.responseType\n      }\n\n      Object.keys(opts.headers).forEach((header) => {\n        xhr.setRequestHeader(header, opts.headers[header])\n      })\n\n      const queuedRequest = this.requests.run(() => {\n        xhr.send(data)\n        return () => {\n          // eslint-disable-next-line no-use-before-define\n          timer.done()\n          xhr.abort()\n        }\n      }, { priority: 1 })\n\n      this.#addEventHandlerForFile('file-removed', file.id, () => {\n        queuedRequest.abort()\n        reject(new Error('File removed'))\n      })\n\n      this.#addEventHandlerIfFileStillExists('cancel-all', file.id, ({ reason } = {}) => {\n        if (reason === 'user') {\n          queuedRequest.abort()\n        }\n        reject(new Error('Upload cancelled'))\n      })\n    })\n  }\n\n  #requestSocketToken = async (file) => {\n    const opts = this.#getOptions(file)\n    const Client = file.remote.providerOptions.provider ? Provider : RequestClient\n    const client = new Client(this.uppy, file.remote.providerOptions)\n    const allowedMetaFields = Array.isArray(opts.allowedMetaFields)\n      ? opts.allowedMetaFields\n      // Send along all fields by default.\n      : Object.keys(file.meta)\n\n    if (file.tus) {\n      // Install file-specific upload overrides.\n      Object.assign(opts, file.tus)\n    }\n\n    const res = await client.post(file.remote.url, {\n      ...file.remote.body,\n      protocol: 'multipart',\n      endpoint: opts.endpoint,\n      size: file.data.size,\n      fieldname: opts.fieldName,\n      metadata: Object.fromEntries(allowedMetaFields.map(name => [name, file.meta[name]])),\n      httpMethod: opts.method,\n      useFormData: opts.formData,\n      headers: opts.headers,\n    })\n    return res.token\n  }\n\n  // NOTE! Keep this duplicated code in sync with other plugins\n  // TODO we should probably abstract this into a common function\n  async #uploadRemoteFile (file) {\n    // TODO: we could rewrite this to use server-sent events instead of creating WebSockets.\n    try {\n      if (file.serverToken) {\n        return await this.connectToServerSocket(file)\n      }\n      const serverToken = await this.#queueRequestSocketToken(file)\n\n      if (!this.uppy.getState().files[file.id]) return undefined\n\n      this.uppy.setFileState(file.id, { serverToken })\n      return await this.connectToServerSocket(this.uppy.getFile(file.id))\n    } catch (err) {\n      this.uppy.setFileState(file.id, { serverToken: undefined })\n      this.uppy.emit('upload-error', file, err)\n      throw err\n    }\n  }\n\n  async connectToServerSocket (file) {\n    return new Promise((resolve, reject) => {\n      const opts = this.#getOptions(file)\n      const token = file.serverToken\n      const host = getSocketHost(file.remote.companionUrl)\n      let socket\n\n      const createSocket = () => {\n        if (socket != null) return\n\n        socket = new Socket({ target: `${host}/api/${token}` })\n\n        socket.on('progress', (progressData) => emitSocketProgress(this, progressData, file))\n\n        socket.on('success', (data) => {\n          const body = opts.getResponseData(data.response.responseText, data.response)\n          const uploadURL = body[opts.responseUrlFieldName]\n\n          const uploadResp = {\n            status: data.response.status,\n            body,\n            uploadURL,\n            bytesUploaded: data.bytesUploaded,\n          }\n\n          this.uppy.emit('upload-success', file, uploadResp)\n          queuedRequest.done() // eslint-disable-line no-use-before-define\n          socket.close()\n          if (this.uploaderEvents[file.id]) {\n            this.uploaderEvents[file.id].remove()\n            this.uploaderEvents[file.id] = null\n          }\n          return resolve()\n        })\n\n        socket.on('error', (errData) => {\n          const resp = errData.response\n          const error = resp\n            ? opts.getResponseError(resp.responseText, resp)\n            : new ErrorWithCause(errData.error.message, { cause: errData.error })\n          this.uppy.emit('upload-error', file, error)\n          queuedRequest.done() // eslint-disable-line no-use-before-define\n          if (this.uploaderEvents[file.id]) {\n            this.uploaderEvents[file.id].remove()\n            this.uploaderEvents[file.id] = null\n          }\n          reject(error)\n        })\n      }\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n\n      let queuedRequest = this.requests.run(() => {\n        if (file.isPaused) {\n          socket?.send('pause', {})\n        } else {\n          createSocket()\n        }\n\n        return () => socket.close()\n      })\n\n      this.#addEventHandlerForFile('file-removed', file.id, () => {\n        socket?.send('cancel', {})\n        queuedRequest.abort()\n        resolve(`upload ${file.id} was removed`)\n      })\n\n      this.#addEventHandlerIfFileStillExists('cancel-all', file.id, ({ reason } = {}) => {\n        if (reason === 'user') {\n          socket?.send('cancel', {})\n          queuedRequest.abort()\n        }\n        resolve(`upload ${file.id} was canceled`)\n      })\n\n      const onRetryRequest = () => {\n        if (socket == null) {\n          queuedRequest.abort()\n        } else {\n          socket.send('pause', {})\n          queuedRequest.done()\n        }\n        queuedRequest = this.requests.run(() => {\n          if (!file.isPaused) {\n            if (socket == null) {\n              createSocket()\n            } else {\n              socket.send('resume', {})\n            }\n          }\n\n          return () => socket.close()\n        })\n      }\n      this.#addEventHandlerForFile('upload-retry', file.id, onRetryRequest)\n      this.#addEventHandlerIfFileStillExists('retry-all', file.id, onRetryRequest)\n    }).catch((err) => {\n      this.uppy.emit('upload-error', file, err)\n      return Promise.reject(err)\n    })\n  }\n}\n"],"mappings":"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"}