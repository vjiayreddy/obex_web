{"version":3,"names":["BasePlugin","RateLimitedQueue","internalRateLimitedQueue","RequestClient","filterNonFailedFiles","filterFilesToEmitUploadStarted","packageJson","MiniXHRUpload","isXml","locale","resolveUrl","origin","link","startsWith","URL","undefined","toString","getXmlValue","source","tagName","start","indexOf","end","slice","length","assertServerError","res","error","Error","message","Object","assign","validateParameters","file","params","valid","url","fields","err","TypeError","name","JSON","stringify","methodIsValid","method","test","defaultGetResponseError","content","xhr","warnedSuccessActionStatus","Symbol","for","AwsS3","constructor","uppy","opts","fileIDs","paramsPromises","create","onremove","id","abort","on","files","getFilesByIds","filesFiltered","filesToEmit","emit","getUploadParameters","wrapPromiseFunction","numberOfFiles","Promise","allSettled","map","index","getFile","then","headers","xhrOpts","formData","toLowerCase","endpoint","allowedMetaFields","keys","setFileState","meta","xhrUpload","uploadFile","catch","reject","finally","off","setCompanionHeaders","companionHeaders","resolve","type","title","defaultLocale","defaultOptions","timeout","limit","bind","i18nInit","client","companionUrl","filename","metadata","fromEntries","filter","key","query","URLSearchParams","get","install","addPreProcessor","addUploader","defaultGetResponseData","toUpperCase","log","location","responseURL","replace","bucket","etag","xhrOptions","fieldName","responseUrlFieldName","responseType","getResponseData","getResponseError","i18n","uninstall","removePreProcessor","removeUploader","VERSION","version"],"sources":["index.js"],"sourcesContent":["/**\n * This plugin is currently a A Big Hack™! The core reason for that is how this plugin\n * interacts with Uppy's current pipeline design. The pipeline can handle files in steps,\n * including preprocessing, uploading, and postprocessing steps. This plugin initially\n * was designed to do its work in a preprocessing step, and let XHRUpload deal with the\n * actual file upload as an uploading step. However, Uppy runs steps on all files at once,\n * sequentially: first, all files go through a preprocessing step, then, once they are all\n * done, they go through the uploading step.\n *\n * For S3, this causes severely broken behaviour when users upload many files. The\n * preprocessing step will request S3 upload URLs that are valid for a short time only,\n * but it has to do this for _all_ files, which can take a long time if there are hundreds\n * or even thousands of files. By the time the uploader step starts, the first URLs may\n * already have expired. If not, the uploading might take such a long time that later URLs\n * will expire before some files can be uploaded.\n *\n * The long-term solution to this problem is to change the upload pipeline so that files\n * can be sent to the next step individually. That requires a breaking change, so it is\n * planned for some future Uppy version.\n *\n * In the mean time, this plugin is stuck with a hackier approach: the necessary parts\n * of the XHRUpload implementation were copied into this plugin, as the MiniXHRUpload\n * class, and this plugin calls into it immediately once it receives an upload URL.\n * This isn't as nicely modular as we'd like and requires us to maintain two copies of\n * the XHRUpload code, but at least it's not horrifically broken :)\n */\n\nimport BasePlugin from '@uppy/core/lib/BasePlugin.js'\nimport { RateLimitedQueue, internalRateLimitedQueue } from '@uppy/utils/lib/RateLimitedQueue'\nimport { RequestClient } from '@uppy/companion-client'\nimport { filterNonFailedFiles, filterFilesToEmitUploadStarted } from '@uppy/utils/lib/fileFilters'\n\nimport packageJson from '../package.json'\nimport MiniXHRUpload from './MiniXHRUpload.js'\nimport isXml from './isXml.js'\nimport locale from './locale.js'\n\nfunction resolveUrl (origin, link) {\n  // DigitalOcean doesn’t return the protocol from Location\n  // without it, the `new URL` constructor will fail\n  if (!origin && !link.startsWith('https://') && !link.startsWith('http://')) {\n    link = `https://${link}` // eslint-disable-line no-param-reassign\n  }\n  return new URL(link, origin || undefined).toString()\n}\n\n/**\n * Get the contents of a named tag in an XML source string.\n *\n * @param {string} source - The XML source string.\n * @param {string} tagName - The name of the tag.\n * @returns {string} The contents of the tag, or the empty string if the tag does not exist.\n */\nfunction getXmlValue (source, tagName) {\n  const start = source.indexOf(`<${tagName}>`)\n  const end = source.indexOf(`</${tagName}>`, start)\n  return start !== -1 && end !== -1\n    ? source.slice(start + tagName.length + 2, end)\n    : ''\n}\n\nfunction assertServerError (res) {\n  if (res && res.error) {\n    const error = new Error(res.message)\n    Object.assign(error, res.error)\n    throw error\n  }\n  return res\n}\n\nfunction validateParameters (file, params) {\n  const valid = params != null\n    && typeof params.url === 'string'\n    && (typeof params.fields === 'object' || params.fields == null)\n\n  if (!valid) {\n    const err = new TypeError(`AwsS3: got incorrect result from 'getUploadParameters()' for file '${file.name}', expected an object '{ url, method, fields, headers }' but got '${JSON.stringify(params)}' instead.\\nSee https://uppy.io/docs/aws-s3/#getUploadParameters-file for more on the expected format.`)\n    throw err\n  }\n\n  const methodIsValid = params.method == null || /^p(u|os)t$/i.test(params.method)\n\n  if (!methodIsValid) {\n    const err = new TypeError(`AwsS3: got incorrect method from 'getUploadParameters()' for file '${file.name}', expected  'put' or 'post' but got '${params.method}' instead.\\nSee https://uppy.io/docs/aws-s3/#getUploadParameters-file for more on the expected format.`)\n    throw err\n  }\n}\n\n// Get the error data from a failed XMLHttpRequest instance.\n// `content` is the S3 response as a string.\n// `xhr` is the XMLHttpRequest instance.\nfunction defaultGetResponseError (content, xhr) {\n  // If no response, we don't have a specific error message, use the default.\n  if (!isXml(content, xhr)) {\n    return undefined\n  }\n  const error = getXmlValue(content, 'Message')\n  return new Error(error)\n}\n\n// warning deduplication flag: see `getResponseData()` XHRUpload option definition\nlet warnedSuccessActionStatus = false\n\nexport default class AwsS3 extends BasePlugin {\n  static VERSION = packageJson.version\n\n  #client\n\n  #requests\n\n  #uploader\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'uploader'\n    this.id = this.opts.id || 'AwsS3'\n    this.title = 'AWS S3'\n\n    this.defaultLocale = locale\n\n    const defaultOptions = {\n      timeout: 30 * 1000,\n      limit: 0,\n      allowedMetaFields: [], // have to opt in\n      getUploadParameters: this.getUploadParameters.bind(this),\n      companionHeaders: {},\n    }\n\n    this.opts = { ...defaultOptions, ...opts }\n\n    if (opts?.allowedMetaFields === undefined && 'metaFields' in this.opts) {\n      throw new Error('The `metaFields` option has been renamed to `allowedMetaFields`.')\n    }\n\n    // TODO: remove i18n once we can depend on XHRUpload instead of MiniXHRUpload\n    this.i18nInit()\n\n    this.#client = new RequestClient(uppy, opts)\n    this.#requests = new RateLimitedQueue(this.opts.limit)\n  }\n\n  [Symbol.for('uppy test: getClient')] () { return this.#client }\n\n  // TODO: remove getter and setter for #client on the next major release\n  get client () { return this.#client }\n\n  set client (client) { this.#client = client }\n\n  getUploadParameters (file) {\n    if (!this.opts.companionUrl) {\n      throw new Error('Expected a `companionUrl` option containing a Companion address.')\n    }\n\n    const filename = file.meta.name\n    const { type } = file.meta\n    const metadata = Object.fromEntries(\n      this.opts.allowedMetaFields\n        .filter(key => file.meta[key] != null)\n        .map(key => [`metadata[${key}]`, file.meta[key].toString()]),\n    )\n\n    const query = new URLSearchParams({ filename, type, ...metadata })\n    return this.#client.get(`s3/params?${query}`)\n      .then(assertServerError)\n  }\n\n  #handleUpload = async (fileIDs) => {\n    /**\n     * keep track of `getUploadParameters()` responses\n     * so we can cancel the calls individually using just a file ID\n     *\n     * @type {Record<string, import('@uppy/utils/lib/RateLimitedQueue').AbortablePromise<unknown>>}\n     */\n    const paramsPromises = Object.create(null)\n\n    function onremove (file) {\n      const { id } = file\n      paramsPromises[id]?.abort()\n    }\n    this.uppy.on('file-removed', onremove)\n\n    const files = this.uppy.getFilesByIds(fileIDs)\n\n    const filesFiltered = filterNonFailedFiles(files)\n    const filesToEmit = filterFilesToEmitUploadStarted(filesFiltered)\n    this.uppy.emit('upload-start', filesToEmit)\n\n    const getUploadParameters = this.#requests.wrapPromiseFunction((file) => {\n      return this.opts.getUploadParameters(file)\n    })\n\n    const numberOfFiles = fileIDs.length\n\n    return Promise.allSettled(fileIDs.map((id, index) => {\n      paramsPromises[id] = getUploadParameters(this.uppy.getFile(id))\n      return paramsPromises[id].then((params) => {\n        delete paramsPromises[id]\n\n        const file = this.uppy.getFile(id)\n        validateParameters(file, params)\n\n        const {\n          method = 'post',\n          url,\n          fields,\n          headers,\n        } = params\n        const xhrOpts = {\n          method,\n          formData: method.toLowerCase() === 'post',\n          endpoint: url,\n          allowedMetaFields: fields ? Object.keys(fields) : [],\n        }\n\n        if (headers) {\n          xhrOpts.headers = headers\n        }\n\n        this.uppy.setFileState(file.id, {\n          meta: { ...file.meta, ...fields },\n          xhrUpload: xhrOpts,\n        })\n\n        return this.#uploader.uploadFile(file.id, index, numberOfFiles)\n      }).catch((error) => {\n        delete paramsPromises[id]\n\n        const file = this.uppy.getFile(id)\n        this.uppy.emit('upload-error', file, error)\n        return Promise.reject(error)\n      })\n    })).finally(() => {\n      // cleanup.\n      this.uppy.off('file-removed', onremove)\n    })\n  }\n\n  #setCompanionHeaders = () => {\n    this.#client.setCompanionHeaders(this.opts.companionHeaders)\n    return Promise.resolve()\n  }\n\n  install () {\n    const { uppy } = this\n    uppy.addPreProcessor(this.#setCompanionHeaders)\n    uppy.addUploader(this.#handleUpload)\n\n    // Get the response data from a successful XMLHttpRequest instance.\n    // `content` is the S3 response as a string.\n    // `xhr` is the XMLHttpRequest instance.\n    function defaultGetResponseData (content, xhr) {\n      const opts = this\n\n      // If no response, we've hopefully done a PUT request to the file\n      // in the bucket on its full URL.\n      if (!isXml(content, xhr)) {\n        if (opts.method.toUpperCase() === 'POST') {\n          if (!warnedSuccessActionStatus) {\n            uppy.log('[AwsS3] No response data found, make sure to set the success_action_status AWS SDK option to 201. See https://uppy.io/docs/aws-s3/#POST-Uploads', 'warning')\n            warnedSuccessActionStatus = true\n          }\n          // The responseURL won't contain the object key. Give up.\n          return { location: null }\n        }\n\n        // responseURL is not available in older browsers.\n        if (!xhr.responseURL) {\n          return { location: null }\n        }\n\n        // Trim the query string because it's going to be a bunch of presign\n        // parameters for a PUT request—doing a GET request with those will\n        // always result in an error\n        return { location: xhr.responseURL.replace(/\\?.*$/, '') }\n      }\n\n      return {\n        // Some S3 alternatives do not reply with an absolute URL.\n        // Eg DigitalOcean Spaces uses /$bucketName/xyz\n        location: resolveUrl(xhr.responseURL, getXmlValue(content, 'Location')),\n        bucket: getXmlValue(content, 'Bucket'),\n        key: getXmlValue(content, 'Key'),\n        etag: getXmlValue(content, 'ETag'),\n      }\n    }\n\n    const xhrOptions = {\n      fieldName: 'file',\n      responseUrlFieldName: 'location',\n      timeout: this.opts.timeout,\n      // Share the rate limiting queue with XHRUpload.\n      [internalRateLimitedQueue]: this.#requests,\n      responseType: 'text',\n      getResponseData: this.opts.getResponseData || defaultGetResponseData,\n      getResponseError: defaultGetResponseError,\n    }\n\n    // TODO: remove i18n once we can depend on XHRUpload instead of MiniXHRUpload\n    xhrOptions.i18n = this.i18n\n\n    // Revert to `uppy.use(XHRUpload)` once the big comment block at the top of\n    // this file is solved\n    this.#uploader = new MiniXHRUpload(uppy, xhrOptions)\n  }\n\n  uninstall () {\n    this.uppy.removePreProcessor(this.#setCompanionHeaders)\n    this.uppy.removeUploader(this.#handleUpload)\n  }\n}\n"],"mappings":"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"}