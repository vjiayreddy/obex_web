{"version":3,"names":["getFilesAndDirectoriesFromDirectory","getAsFileSystemHandleFromEntry","entry","logDropError","kind","isFile","isDirectory","undefined","name","getFile","Promise","resolve","reject","file","values","directoryReader","createReader","entries","onSuccess","dirEntries","map","createPromiseToAddFileOrParseDirectory","relativePath","lastResortFile","handle","getFilesFromDataTransfer","dataTransfer","fileSystemHandles","all","Array","from","items","item","fileSystemHandle","getAsEntry","webkitGetAsEntry","getAsFile","err"],"sources":["index.js"],"sourcesContent":["import getFilesAndDirectoriesFromDirectory from './getFilesAndDirectoriesFromDirectory.js'\n\n/**\n * Polyfill for the new (experimental) getAsFileSystemHandle API (using the popular webkitGetAsEntry behind the scenes)\n * so that we can switch to the getAsFileSystemHandle API once it (hopefully) becomes standard\n */\nfunction getAsFileSystemHandleFromEntry (entry, logDropError) {\n  if (entry == null) return entry\n  return {\n    // eslint-disable-next-line no-nested-ternary\n    kind: entry.isFile ? 'file' : entry.isDirectory ? 'directory' : undefined,\n    name: entry.name,\n    getFile () {\n      return new Promise((resolve, reject) => entry.file(resolve, reject))\n    },\n    async* values () {\n      // If the file is a directory.\n      const directoryReader = entry.createReader()\n      const entries = await new Promise(resolve => {\n        getFilesAndDirectoriesFromDirectory(directoryReader, [], logDropError, {\n          onSuccess: (dirEntries) => resolve(dirEntries.map(file => getAsFileSystemHandleFromEntry(file, logDropError))),\n        })\n      })\n      yield* entries\n    },\n  }\n}\n\nasync function* createPromiseToAddFileOrParseDirectory (entry, relativePath, lastResortFile = undefined) {\n  // For each dropped item, - make sure it's a file/directory, and start deepening in!\n  if (entry.kind === 'file') {\n    const file = await entry.getFile()\n    if (file != null) {\n      file.relativePath = relativePath ? `${relativePath}/${entry.name}` : null\n      yield file\n    } else if (lastResortFile != null) yield lastResortFile\n  } else if (entry.kind === 'directory') {\n    for await (const handle of entry.values()) {\n      // Recurse on the directory, appending the dir name to the relative path\n      yield* createPromiseToAddFileOrParseDirectory(handle, `${relativePath}/${entry.name}`)\n    }\n  } else if (lastResortFile != null) yield lastResortFile\n}\n\n/**\n * Load all files from data transfer, and recursively read any directories.\n * Note that IE is not supported for drag-drop, because IE doesn't support Data Transfers\n *\n * @param {DataTransfer} dataTransfer\n * @param {*} logDropError on error\n */\nexport default async function* getFilesFromDataTransfer (dataTransfer, logDropError) {\n  // Retrieving the dropped items must happen synchronously\n  // otherwise only the first item gets treated and the other ones are garbage collected.\n  // https://github.com/transloadit/uppy/pull/3998\n  const fileSystemHandles = await Promise.all(Array.from(dataTransfer.items, async item => {\n    let fileSystemHandle\n\n    // TODO enable getAsFileSystemHandle API once we can get it working with subdirectories\n    // IMPORTANT: Need to check isSecureContext *before* calling getAsFileSystemHandle\n    // or else Chrome will crash when running in HTTP: https://github.com/transloadit/uppy/issues/4133\n    // if (window.isSecureContext && item.getAsFileSystemHandle != null) entry = await item.getAsFileSystemHandle()\n\n    // `webkitGetAsEntry` exists in all popular browsers (including non-WebKit browsers),\n    // however it may be renamed to getAsEntry() in the future, so you should code defensively, looking for both.\n    // from https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry\n    const getAsEntry = () => (typeof item.getAsEntry === 'function' ? item.getAsEntry() : item.webkitGetAsEntry())\n    // eslint-disable-next-line prefer-const\n    fileSystemHandle ??= getAsFileSystemHandleFromEntry(getAsEntry(), logDropError)\n\n    return {\n      fileSystemHandle,\n      lastResortFile: item.getAsFile(), // can be used as a fallback in case other methods fail\n    }\n  }))\n\n  for (const { lastResortFile, fileSystemHandle } of fileSystemHandles) {\n    // fileSystemHandle and lastResortFile can be null when we drop an url.\n    if (fileSystemHandle != null) {\n      try {\n        yield* createPromiseToAddFileOrParseDirectory(fileSystemHandle, '', lastResortFile)\n      } catch (err) {\n        // Example: If dropping a symbolic link, Chromium will throw:\n        // \"DOMException: A requested file or directory could not be found at the time an operation was processed.\",\n        // So we will use lastResortFile instead. See https://github.com/transloadit/uppy/issues/3505.\n        if (lastResortFile != null) {\n          yield lastResortFile\n        } else {\n          logDropError(err)\n        }\n      }\n    } else if (lastResortFile != null) yield lastResortFile\n  }\n}\n"],"mappings":"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"}