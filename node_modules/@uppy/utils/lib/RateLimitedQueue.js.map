{"version":3,"names":["createCancelError","cause","Error","abortOn","signal","abortPromise","abort","reason","addEventListener","once","removeAbortListener","removeEventListener","then","RateLimitedQueue","constructor","limit","resume","setTimeout","Math","ceil","i","floor","Infinity","run","fn","queueOptions","wrapPromiseFunction","args","queuedRequest","outerPromise","Promise","resolve","reject","cancelError","innerPromise","err","result","done","clearTimeout","pause","duration","rateLimit","Number","isFinite","isPaused","cancelActive","queueMicrotask","length","next","shift","handler","options","priority","index","findIndex","other","push","splice","indexOf","internalRateLimitedQueue","Symbol"],"sources":["RateLimitedQueue.js"],"sourcesContent":["function createCancelError (cause) {\n  return new Error('Cancelled', { cause })\n}\n\nfunction abortOn (signal) {\n  if (signal != null) {\n    const abortPromise = () => this.abort(signal.reason)\n    signal.addEventListener('abort', abortPromise, { once: true })\n    const removeAbortListener = () => { signal.removeEventListener('abort', abortPromise) }\n    this.then(removeAbortListener, removeAbortListener)\n  }\n\n  return this\n}\n\nexport class RateLimitedQueue {\n  #activeRequests = 0\n\n  #queuedHandlers = []\n\n  #paused = false\n\n  #pauseTimer\n\n  #downLimit = 1\n\n  #upperLimit\n\n  #rateLimitingTimer\n\n  constructor (limit) {\n    if (typeof limit !== 'number' || limit === 0) {\n      this.limit = Infinity\n    } else {\n      this.limit = limit\n    }\n  }\n\n  #call (fn) {\n    this.#activeRequests += 1\n\n    let done = false\n\n    let cancelActive\n    try {\n      cancelActive = fn()\n    } catch (err) {\n      this.#activeRequests -= 1\n      throw err\n    }\n\n    return {\n      abort: (cause) => {\n        if (done) return\n        done = true\n        this.#activeRequests -= 1\n        cancelActive(cause)\n        this.#queueNext()\n      },\n\n      done: () => {\n        if (done) return\n        done = true\n        this.#activeRequests -= 1\n        this.#queueNext()\n      },\n    }\n  }\n\n  #queueNext () {\n    // Do it soon but not immediately, this allows clearing out the entire queue synchronously\n    // one by one without continuously _advancing_ it (and starting new tasks before immediately\n    // aborting them)\n    queueMicrotask(() => this.#next())\n  }\n\n  #next () {\n    if (this.#paused || this.#activeRequests >= this.limit) {\n      return\n    }\n    if (this.#queuedHandlers.length === 0) {\n      return\n    }\n\n    // Dispatch the next request, and update the abort/done handlers\n    // so that cancelling it does the Right Thing (and doesn't just try\n    // to dequeue an already-running request).\n    const next = this.#queuedHandlers.shift()\n    const handler = this.#call(next.fn)\n    next.abort = handler.abort\n    next.done = handler.done\n  }\n\n  #queue (fn, options = {}) {\n    const handler = {\n      fn,\n      priority: options.priority || 0,\n      abort: () => {\n        this.#dequeue(handler)\n      },\n      done: () => {\n        throw new Error('Cannot mark a queued request as done: this indicates a bug')\n      },\n    }\n\n    const index = this.#queuedHandlers.findIndex((other) => {\n      return handler.priority > other.priority\n    })\n    if (index === -1) {\n      this.#queuedHandlers.push(handler)\n    } else {\n      this.#queuedHandlers.splice(index, 0, handler)\n    }\n    return handler\n  }\n\n  #dequeue (handler) {\n    const index = this.#queuedHandlers.indexOf(handler)\n    if (index !== -1) {\n      this.#queuedHandlers.splice(index, 1)\n    }\n  }\n\n  run (fn, queueOptions) {\n    if (!this.#paused && this.#activeRequests < this.limit) {\n      return this.#call(fn)\n    }\n    return this.#queue(fn, queueOptions)\n  }\n\n  wrapPromiseFunction (fn, queueOptions) {\n    return (...args) => {\n      let queuedRequest\n      const outerPromise = new Promise((resolve, reject) => {\n        queuedRequest = this.run(() => {\n          let cancelError\n          let innerPromise\n          try {\n            innerPromise = Promise.resolve(fn(...args))\n          } catch (err) {\n            innerPromise = Promise.reject(err)\n          }\n\n          innerPromise.then((result) => {\n            if (cancelError) {\n              reject(cancelError)\n            } else {\n              queuedRequest.done()\n              resolve(result)\n            }\n          }, (err) => {\n            if (cancelError) {\n              reject(cancelError)\n            } else {\n              queuedRequest.done()\n              reject(err)\n            }\n          })\n\n          return (cause) => {\n            cancelError = createCancelError(cause)\n          }\n        }, queueOptions)\n      })\n\n      outerPromise.abort = (cause) => {\n        queuedRequest.abort(cause)\n      }\n      outerPromise.abortOn = abortOn\n\n      return outerPromise\n    }\n  }\n\n  resume () {\n    this.#paused = false\n    clearTimeout(this.#pauseTimer)\n    for (let i = 0; i < this.limit; i++) {\n      this.#queueNext()\n    }\n  }\n\n  #resume = () => this.resume()\n\n  /**\n   * Freezes the queue for a while or indefinitely.\n   *\n   * @param {number | null } [duration] Duration for the pause to happen, in milliseconds.\n   *                                    If omitted, the queue won't resume automatically.\n   */\n  pause (duration = null) {\n    this.#paused = true\n    clearTimeout(this.#pauseTimer)\n    if (duration != null) {\n      this.#pauseTimer = setTimeout(this.#resume, duration)\n    }\n  }\n\n  /**\n   * Pauses the queue for a duration, and lower the limit of concurrent requests\n   * when the queue resumes. When the queue resumes, it tries to progressively\n   * increase the limit in `this.#increaseLimit` until another call is made to\n   * `this.rateLimit`.\n   * Call this function when using the RateLimitedQueue for network requests and\n   * the remote server responds with 429 HTTP code.\n   *\n   * @param {number} duration in milliseconds.\n   */\n  rateLimit (duration) {\n    clearTimeout(this.#rateLimitingTimer)\n    this.pause(duration)\n    if (this.limit > 1 && Number.isFinite(this.limit)) {\n      this.#upperLimit = this.limit - 1\n      this.limit = this.#downLimit\n      this.#rateLimitingTimer = setTimeout(this.#increaseLimit, duration)\n    }\n  }\n\n  #increaseLimit = () => {\n    if (this.#paused) {\n      this.#rateLimitingTimer = setTimeout(this.#increaseLimit, 0)\n      return\n    }\n    this.#downLimit = this.limit\n    this.limit = Math.ceil((this.#upperLimit + this.#downLimit) / 2)\n    for (let i = this.#downLimit; i <= this.limit; i++) {\n      this.#queueNext()\n    }\n    if (this.#upperLimit - this.#downLimit > 3) {\n      this.#rateLimitingTimer = setTimeout(this.#increaseLimit, 2000)\n    } else {\n      this.#downLimit = Math.floor(this.#downLimit / 2)\n    }\n  }\n\n  get isPaused () { return this.#paused }\n}\n\nexport const internalRateLimitedQueue = Symbol('__queue')\n"],"mappings":"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"}