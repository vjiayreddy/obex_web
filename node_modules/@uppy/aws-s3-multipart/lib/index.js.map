{"version":3,"names":["BasePlugin","Socket","Provider","RequestClient","EventTracker","emitSocketProgress","getSocketHost","RateLimitedQueue","filterNonFailedFiles","filterFilesToEmitUploadStarted","createAbortError","packageJson","MultipartUploader","assertServerError","res","error","Error","message","Object","assign","throwIfAborted","signal","aborted","cause","reason","HTTPCommunicationQueue","constructor","requests","options","setS3MultipartState","WeakMap","setOptions","wrapPromiseFunction","abortMultipartUpload","createMultipartUpload","priority","signPart","listParts","completeMultipartUpload","retryDelays","values","uploadPartBytes","Infinity","getUploadId","file","cachedResult","get","data","promise","abortPromise","abort","delete","addEventListener","once","set","then","result","removeEventListener","abortFileUpload","uploadFile","chunks","uploadId","key","parts","Promise","all","map","chunk","i","uploadChunk","abortOn","resumeUploadFile","alreadyUploadedParts","partNumber","alreadyUploadedInfo","find","PartNumber","ETag","chunkData","getData","onProgress","onComplete","signature","body","err","status","source","isPaused","limit","next","done","value","rateLimit","resolve","setTimeout","navigator","onLine","pause","window","resume","Symbol","for","AwsS3Multipart","uppy","opts","cFile","getFile","id","setFileState","s3Multipart","Client","remote","providerOptions","provider","client","tus","url","post","protocol","size","metadata","meta","token","fileIDs","length","undefined","files","getFilesByIds","filesFiltered","filesToEmit","emit","promises","isRemote","setCompanionHeaders","companionHeaders","type","title","defaultOptions","allowedMetaFields","bind","prepareUploadParts","presignedUrls","headers","number","rateLimitedQueue","uploaders","create","uploaderEvents","uploaderSockets","newOptions","resetUploaderReferences","fileID","really","remove","close","assertHost","method","companionUrl","fromEntries","keys","filter","String","filename","name","encodeURIComponent","uploadIdEnc","expires","reject","xhr","XMLHttpRequest","open","forEach","setRequestHeader","responseType","timeout","onabort","cleanup","upload","ev","target","responseText","includes","etag","getResponseHeader","send","connectToServerSocket","queuedRequest","serverToken","host","socket","autoOpen","onFileRemove","onFilePause","run","onPauseAll","onCancelAll","onResumeAll","onRetry","isOpen","onRetryAll","on","progressData","errData","uploadResp","uploadURL","cb","targetFileID","eventHandler","install","capabilities","getState","setState","resumableUploads","addPreProcessor","addUploader","uninstall","removePreProcessor","removeUploader","bytesUploaded","bytesTotal","uploader","onError","log","onSuccess","location","onPartComplete","part","companionComm","getChunkSize","removed","start","VERSION","version"],"sources":["index.js"],"sourcesContent":["import BasePlugin from '@uppy/core/lib/BasePlugin.js'\nimport { Socket, Provider, RequestClient } from '@uppy/companion-client'\nimport EventTracker from '@uppy/utils/lib/EventTracker'\nimport emitSocketProgress from '@uppy/utils/lib/emitSocketProgress'\nimport getSocketHost from '@uppy/utils/lib/getSocketHost'\nimport { RateLimitedQueue } from '@uppy/utils/lib/RateLimitedQueue'\nimport { filterNonFailedFiles, filterFilesToEmitUploadStarted } from '@uppy/utils/lib/fileFilters'\nimport { createAbortError } from '@uppy/utils/lib/AbortController'\nimport packageJson from '../package.json'\nimport MultipartUploader from './MultipartUploader.js'\n\nfunction assertServerError (res) {\n  if (res && res.error) {\n    const error = new Error(res.message)\n    Object.assign(error, res.error)\n    throw error\n  }\n  return res\n}\n\nfunction throwIfAborted (signal) {\n  if (signal?.aborted) { throw createAbortError('The operation was aborted', { cause: signal.reason }) }\n}\n\nclass HTTPCommunicationQueue {\n  #abortMultipartUpload\n\n  #cache = new WeakMap()\n\n  #createMultipartUpload\n\n  #fetchSignature\n\n  #listParts\n\n  #previousRetryDelay\n\n  #requests\n\n  #retryDelayIterator\n\n  #sendCompletionRequest\n\n  #setS3MultipartState\n\n  #uploadPartBytes\n\n  constructor (requests, options, setS3MultipartState) {\n    this.#requests = requests\n    this.#setS3MultipartState = setS3MultipartState\n    this.setOptions(options)\n  }\n\n  setOptions (options) {\n    const requests = this.#requests\n\n    if ('abortMultipartUpload' in options) {\n      this.#abortMultipartUpload = requests.wrapPromiseFunction(options.abortMultipartUpload)\n    }\n    if ('createMultipartUpload' in options) {\n      this.#createMultipartUpload = requests.wrapPromiseFunction(options.createMultipartUpload, { priority:-1 })\n    }\n    if ('signPart' in options) {\n      this.#fetchSignature = requests.wrapPromiseFunction(options.signPart)\n    }\n    if ('listParts' in options) {\n      this.#listParts = requests.wrapPromiseFunction(options.listParts)\n    }\n    if ('completeMultipartUpload' in options) {\n      this.#sendCompletionRequest = requests.wrapPromiseFunction(options.completeMultipartUpload)\n    }\n    if ('retryDelays' in options) {\n      this.#retryDelayIterator = options.retryDelays?.values()\n    }\n    if ('uploadPartBytes' in options) {\n      this.#uploadPartBytes = requests.wrapPromiseFunction(options.uploadPartBytes, { priority:Infinity })\n    }\n  }\n\n  async #shouldRetry (err) {\n    const requests = this.#requests\n    const status = err?.source?.status\n\n    // TODO: this retry logic is taken out of Tus. We should have a centralized place for retrying,\n    // perhaps the rate limited queue, and dedupe all plugins with that.\n    if (status == null) {\n      return false\n    }\n    if (status === 403 && err.message === 'Request has expired') {\n      if (!requests.isPaused) {\n        // We don't want to exhaust the retryDelayIterator as long as there are\n        // more than one request in parallel, to give slower connection a chance\n        // to catch up with the expiry set in Companion.\n        if (requests.limit === 1 || this.#previousRetryDelay == null) {\n          const next = this.#retryDelayIterator?.next()\n          if (next == null || next.done) {\n            return false\n          }\n          // If there are more than 1 request done in parallel, the RLQ limit is\n          // decreased and the failed request is requeued after waiting for a bit.\n          // If there is only one request in parallel, the limit can't be\n          // decreased, so we iterate over `retryDelayIterator` as we do for\n          // other failures.\n          // `#previousRetryDelay` caches the value so we can re-use it next time.\n          this.#previousRetryDelay = next.value\n        }\n        // No need to stop the other requests, we just want to lower the limit.\n        requests.rateLimit(0)\n        await new Promise(resolve => setTimeout(resolve, this.#previousRetryDelay))\n      }\n    } else if (status === 429) {\n      // HTTP 429 Too Many Requests => to avoid the whole download to fail, pause all requests.\n      if (!requests.isPaused) {\n        const next = this.#retryDelayIterator?.next()\n        if (next == null || next.done) {\n          return false\n        }\n        requests.rateLimit(next.value)\n      }\n    } else if (status > 400 && status < 500 && status !== 409) {\n      // HTTP 4xx, the server won't send anything, it's doesn't make sense to retry\n      return false\n    } else if (typeof navigator !== 'undefined' && navigator.onLine === false) {\n      // The navigator is offline, let's wait for it to come back online.\n      if (!requests.isPaused) {\n        requests.pause()\n        window.addEventListener('online', () => {\n          requests.resume()\n        }, { once: true })\n      }\n    } else {\n      // Other error code means the request can be retried later.\n      const next = this.#retryDelayIterator?.next()\n      if (next == null || next.done) {\n        return false\n      }\n      await new Promise(resolve => setTimeout(resolve, next.value))\n    }\n    return true\n  }\n\n  async getUploadId (file, signal) {\n    const cachedResult = this.#cache.get(file.data)\n    if (cachedResult != null) {\n      return cachedResult\n    }\n\n    const promise = this.#createMultipartUpload(file, signal)\n\n    const abortPromise = () => {\n      promise.abort(signal.reason)\n      this.#cache.delete(file.data)\n    }\n    signal.addEventListener('abort', abortPromise, { once: true })\n    this.#cache.set(file.data, promise)\n    promise.then(async (result) => {\n      signal.removeEventListener('abort', abortPromise)\n      this.#setS3MultipartState(file, result)\n      this.#cache.set(file.data, result)\n    }, () => { signal.removeEventListener('abort', abortPromise) })\n\n    return promise\n  }\n\n  async abortFileUpload (file) {\n    const result = this.#cache.get(file.data)\n    if (result != null) {\n      // If the createMultipartUpload request never was made, we don't\n      // need to send the abortMultipartUpload request.\n      await this.#abortMultipartUpload(file, await result)\n    }\n  }\n\n  async uploadFile (file, chunks, signal) {\n    throwIfAborted(signal)\n    const { uploadId, key } = await this.getUploadId(file, signal)\n    throwIfAborted(signal)\n    const parts = await Promise.all(chunks.map((chunk, i) => this.uploadChunk(file, i + 1, chunk, signal)))\n    throwIfAborted(signal)\n    return this.#sendCompletionRequest(file, { key, uploadId, parts, signal }).abortOn(signal)\n  }\n\n  async resumeUploadFile (file, chunks, signal) {\n    throwIfAborted(signal)\n    const { uploadId, key } = await this.getUploadId(file, signal)\n    throwIfAborted(signal)\n    const alreadyUploadedParts = await this.#listParts(file, { uploadId, key, signal }).abortOn(signal)\n    throwIfAborted(signal)\n    const parts = await Promise.all(\n      chunks\n        .map((chunk, i) => {\n          const partNumber = i + 1\n          const alreadyUploadedInfo = alreadyUploadedParts.find(({ PartNumber }) => PartNumber === partNumber)\n          return alreadyUploadedInfo == null\n            ? this.uploadChunk(file, partNumber, chunk, signal)\n            : { PartNumber: partNumber, ETag: alreadyUploadedInfo.ETag }\n        }),\n    )\n    throwIfAborted(signal)\n    return this.#sendCompletionRequest(file, { key, uploadId, parts, signal }).abortOn(signal)\n  }\n\n  async uploadChunk (file, partNumber, chunk, signal) {\n    throwIfAborted(signal)\n    const { uploadId, key } = await this.getUploadId(file, signal)\n    throwIfAborted(signal)\n    for (;;) {\n      const chunkData = chunk.getData()\n      const { onProgress, onComplete } = chunk\n\n      const signature = await this.#fetchSignature(file, {\n        uploadId, key, partNumber, body: chunkData, signal,\n      }).abortOn(signal)\n\n      throwIfAborted(signal)\n      try {\n        return {\n          PartNumber: partNumber,\n          ...await this.#uploadPartBytes({ signature, body: chunkData, onProgress, onComplete, signal }).abortOn(signal),\n        }\n      } catch (err) {\n        if (!await this.#shouldRetry(err)) throw err\n      }\n    }\n  }\n}\n\nexport default class AwsS3Multipart extends BasePlugin {\n  static VERSION = packageJson.version\n\n  #queueRequestSocketToken\n\n  #companionCommunicationQueue\n\n  #client\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'uploader'\n    this.id = this.opts.id || 'AwsS3Multipart'\n    this.title = 'AWS S3 Multipart'\n    this.#client = new RequestClient(uppy, opts)\n\n    const defaultOptions = {\n      // TODO: this is currently opt-in for backward compat, switch to opt-out in the next major\n      allowedMetaFields: null,\n      limit: 6,\n      retryDelays: [0, 1000, 3000, 5000],\n      createMultipartUpload: this.createMultipartUpload.bind(this),\n      listParts: this.listParts.bind(this),\n      abortMultipartUpload: this.abortMultipartUpload.bind(this),\n      completeMultipartUpload: this.completeMultipartUpload.bind(this),\n      signPart: this.signPart.bind(this),\n      uploadPartBytes: AwsS3Multipart.uploadPartBytes,\n      companionHeaders: {},\n    }\n\n    this.opts = { ...defaultOptions, ...opts }\n    if (opts?.prepareUploadParts != null && opts.signPart == null) {\n      this.opts.signPart = async (file, { uploadId, key, partNumber, body, signal }) => {\n        const { presignedUrls, headers } = await opts\n          .prepareUploadParts(file, { uploadId, key, parts: [{ number: partNumber, chunk: body }], signal })\n        return { url: presignedUrls?.[partNumber], headers: headers?.[partNumber] }\n      }\n    }\n\n    /**\n     * Simultaneous upload limiting is shared across all uploads with this plugin.\n     *\n     * @type {RateLimitedQueue}\n     */\n    this.requests = this.opts.rateLimitedQueue ?? new RateLimitedQueue(this.opts.limit)\n    this.#companionCommunicationQueue = new HTTPCommunicationQueue(this.requests, this.opts, this.#setS3MultipartState)\n\n    this.uploaders = Object.create(null)\n    this.uploaderEvents = Object.create(null)\n    this.uploaderSockets = Object.create(null)\n\n    this.#queueRequestSocketToken = this.requests.wrapPromiseFunction(this.#requestSocketToken, { priority: -1 })\n  }\n\n  [Symbol.for('uppy test: getClient')] () { return this.#client }\n\n  setOptions (newOptions) {\n    this.#companionCommunicationQueue.setOptions(newOptions)\n    return super.setOptions(newOptions)\n  }\n\n  /**\n   * Clean up all references for a file's upload: the MultipartUploader instance,\n   * any events related to the file, and the Companion WebSocket connection.\n   *\n   * Set `opts.abort` to tell S3 that the multipart upload is cancelled and must be removed.\n   * This should be done when the user cancels the upload, not when the upload is completed or errored.\n   */\n  resetUploaderReferences (fileID, opts = {}) {\n    if (this.uploaders[fileID]) {\n      this.uploaders[fileID].abort({ really: opts.abort || false })\n      this.uploaders[fileID] = null\n    }\n    if (this.uploaderEvents[fileID]) {\n      this.uploaderEvents[fileID].remove()\n      this.uploaderEvents[fileID] = null\n    }\n    if (this.uploaderSockets[fileID]) {\n      this.uploaderSockets[fileID].close()\n      this.uploaderSockets[fileID] = null\n    }\n  }\n\n  // TODO: make this a private method in the next major\n  assertHost (method) {\n    if (!this.opts.companionUrl) {\n      throw new Error(`Expected a \\`companionUrl\\` option containing a Companion address, or if you are not using Companion, a custom \\`${method}\\` implementation.`)\n    }\n  }\n\n  createMultipartUpload (file, signal) {\n    this.assertHost('createMultipartUpload')\n    throwIfAborted(signal)\n\n    const metadata = file.meta ? Object.fromEntries(\n      (this.opts.allowedMetaFields ?? Object.keys(file.meta))\n        .filter(key => file.meta[key] != null)\n        .map(key => [key, String(file.meta[key])]),\n    ) : {}\n\n    return this.#client.post('s3/multipart', {\n      filename: file.name,\n      type: file.type,\n      metadata,\n    }, { signal }).then(assertServerError)\n  }\n\n  listParts (file, { key, uploadId }, signal) {\n    this.assertHost('listParts')\n    throwIfAborted(signal)\n\n    const filename = encodeURIComponent(key)\n    return this.#client.get(`s3/multipart/${uploadId}?key=${filename}`, { signal })\n      .then(assertServerError)\n  }\n\n  completeMultipartUpload (file, { key, uploadId, parts }, signal) {\n    this.assertHost('completeMultipartUpload')\n    throwIfAborted(signal)\n\n    const filename = encodeURIComponent(key)\n    const uploadIdEnc = encodeURIComponent(uploadId)\n    return this.#client.post(`s3/multipart/${uploadIdEnc}/complete?key=${filename}`, { parts }, { signal })\n      .then(assertServerError)\n  }\n\n  signPart (file, { uploadId, key, partNumber, signal }) {\n    this.assertHost('signPart')\n    throwIfAborted(signal)\n\n    if (uploadId == null || key == null || partNumber == null) {\n      throw new Error('Cannot sign without a key, an uploadId, and a partNumber')\n    }\n\n    const filename = encodeURIComponent(key)\n    return this.#client.get(`s3/multipart/${uploadId}/${partNumber}?key=${filename}`, { signal })\n      .then(assertServerError)\n  }\n\n  abortMultipartUpload (file, { key, uploadId }, signal) {\n    this.assertHost('abortMultipartUpload')\n\n    const filename = encodeURIComponent(key)\n    const uploadIdEnc = encodeURIComponent(uploadId)\n    return this.#client.delete(`s3/multipart/${uploadIdEnc}?key=${filename}`, undefined, { signal })\n      .then(assertServerError)\n  }\n\n  static async uploadPartBytes ({ signature: { url, expires, headers }, body, onProgress, onComplete, signal }) {\n    throwIfAborted(signal)\n\n    if (url == null) {\n      throw new Error('Cannot upload to an undefined URL')\n    }\n\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest()\n      xhr.open('PUT', url, true)\n      if (headers) {\n        Object.keys(headers).forEach((key) => {\n          xhr.setRequestHeader(key, headers[key])\n        })\n      }\n      xhr.responseType = 'text'\n      if (typeof expires === 'number') {\n        xhr.timeout = expires * 1000\n      }\n\n      function onabort () {\n        xhr.abort()\n      }\n      function cleanup () {\n        signal.removeEventListener('abort', onabort)\n      }\n      signal.addEventListener('abort', onabort)\n\n      xhr.upload.addEventListener('progress', onProgress)\n\n      xhr.addEventListener('abort', () => {\n        cleanup()\n\n        reject(createAbortError())\n      })\n\n      xhr.addEventListener('timeout', () => {\n        cleanup()\n\n        const error = new Error('Request has expired')\n        error.source = { status: 403 }\n        reject(error)\n      })\n      xhr.addEventListener('load', (ev) => {\n        cleanup()\n\n        if (ev.target.status === 403 && ev.target.responseText.includes('<Message>Request has expired</Message>')) {\n          const error = new Error('Request has expired')\n          error.source = ev.target\n          reject(error)\n          return\n        } if (ev.target.status < 200 || ev.target.status >= 300) {\n          const error = new Error('Non 2xx')\n          error.source = ev.target\n          reject(error)\n          return\n        }\n\n        onProgress?.(body.size)\n\n        // NOTE This must be allowed by CORS.\n        const etag = ev.target.getResponseHeader('ETag')\n\n        if (etag === null) {\n          reject(new Error('AwsS3/Multipart: Could not read the ETag header. This likely means CORS is not configured correctly on the S3 Bucket. See https://uppy.io/docs/aws-s3-multipart#S3-Bucket-Configuration for instructions.'))\n          return\n        }\n\n        onComplete?.(etag)\n        resolve({\n          ETag: etag,\n        })\n      })\n\n      xhr.addEventListener('error', (ev) => {\n        cleanup()\n\n        const error = new Error('Unknown error')\n        error.source = ev.target\n        reject(error)\n      })\n\n      xhr.send(body)\n    })\n  }\n\n  #setS3MultipartState = (file, { key, uploadId }) => {\n    const cFile = this.uppy.getFile(file.id)\n    this.uppy.setFileState(file.id, {\n      s3Multipart: {\n        ...cFile.s3Multipart,\n        key,\n        uploadId,\n      },\n    })\n  }\n\n  #uploadFile (file) {\n    return new Promise((resolve, reject) => {\n      const getFile = () => this.uppy.getFile(file.id) || file\n\n      const onProgress = (bytesUploaded, bytesTotal) => {\n        this.uppy.emit('upload-progress', file, {\n          uploader: this,\n          bytesUploaded,\n          bytesTotal,\n        })\n      }\n\n      const onError = (err) => {\n        this.uppy.log(err)\n        this.uppy.emit('upload-error', file, err)\n\n        this.resetUploaderReferences(file.id)\n        reject(err)\n      }\n\n      const onSuccess = (result) => {\n        const uploadResp = {\n          body: {\n            ...result,\n          },\n          uploadURL: result.location,\n        }\n\n        this.resetUploaderReferences(file.id)\n\n        this.uppy.emit('upload-success', getFile(), uploadResp)\n\n        if (result.location) {\n          this.uppy.log(`Download ${file.name} from ${result.location}`)\n        }\n\n        resolve()\n      }\n\n      const onPartComplete = (part) => {\n        this.uppy.emit('s3-multipart:part-uploaded', getFile(), part)\n      }\n\n      const upload = new MultipartUploader(file.data, {\n        // .bind to pass the file object to each handler.\n        companionComm: this.#companionCommunicationQueue,\n\n        log: (...args) => this.uppy.log(...args),\n        getChunkSize: this.opts.getChunkSize ? this.opts.getChunkSize.bind(this) : null,\n\n        onProgress,\n        onError,\n        onSuccess,\n        onPartComplete,\n\n        file,\n\n        ...file.s3Multipart,\n      })\n\n      this.uploaders[file.id] = upload\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n\n      this.onFileRemove(file.id, (removed) => {\n        upload.abort()\n        this.resetUploaderReferences(file.id, { abort: true })\n        resolve(`upload ${removed.id} was removed`)\n      })\n\n      this.onCancelAll(file.id, ({ reason } = {}) => {\n        if (reason === 'user') {\n          upload.abort()\n          this.resetUploaderReferences(file.id, { abort: true })\n        }\n        resolve(`upload ${file.id} was canceled`)\n      })\n\n      this.onFilePause(file.id, (isPaused) => {\n        if (isPaused) {\n          upload.pause()\n        } else {\n          upload.start()\n        }\n      })\n\n      this.onPauseAll(file.id, () => {\n        upload.pause()\n      })\n\n      this.onResumeAll(file.id, () => {\n        upload.start()\n      })\n\n      upload.start()\n    })\n  }\n\n  #requestSocketToken = async (file) => {\n    const Client = file.remote.providerOptions.provider ? Provider : RequestClient\n    const client = new Client(this.uppy, file.remote.providerOptions)\n    const opts = { ...this.opts }\n\n    if (file.tus) {\n      // Install file-specific upload overrides.\n      Object.assign(opts, file.tus)\n    }\n\n    if (file.remote.url == null) {\n      throw new Error('Cannot connect to an undefined URL')\n    }\n\n    const res = await client.post(file.remote.url, {\n      ...file.remote.body,\n      protocol: 's3-multipart',\n      size: file.data.size,\n      metadata: file.meta,\n    })\n    return res.token\n  }\n\n  // NOTE! Keep this duplicated code in sync with other plugins\n  // TODO we should probably abstract this into a common function\n  async #uploadRemote (file) {\n    this.resetUploaderReferences(file.id)\n\n    try {\n      if (file.serverToken) {\n        return await this.connectToServerSocket(file)\n      }\n      const serverToken = await this.#queueRequestSocketToken(file)\n\n      if (!this.uppy.getState().files[file.id]) return undefined\n\n      this.uppy.setFileState(file.id, { serverToken })\n      return await this.connectToServerSocket(this.uppy.getFile(file.id))\n    } catch (err) {\n      this.uppy.setFileState(file.id, { serverToken: undefined })\n      this.uppy.emit('upload-error', file, err)\n      throw err\n    }\n  }\n\n  async connectToServerSocket (file) {\n    return new Promise((resolve, reject) => {\n      let queuedRequest\n\n      const token = file.serverToken\n      const host = getSocketHost(file.remote.companionUrl)\n      const socket = new Socket({ target: `${host}/api/${token}`, autoOpen: false })\n      this.uploaderSockets[file.id] = socket\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n\n      this.onFileRemove(file.id, () => {\n        queuedRequest.abort()\n        socket.send('cancel', {})\n        this.resetUploaderReferences(file.id, { abort: true })\n        resolve(`upload ${file.id} was removed`)\n      })\n\n      this.onFilePause(file.id, (isPaused) => {\n        if (isPaused) {\n          // Remove this file from the queue so another file can start in its place.\n          queuedRequest.abort()\n          socket.send('pause', {})\n        } else {\n          // Resuming an upload should be queued, else you could pause and then\n          // resume a queued upload to make it skip the queue.\n          queuedRequest.abort()\n          queuedRequest = this.requests.run(() => {\n            socket.open()\n            socket.send('resume', {})\n            return () => socket.close()\n          })\n        }\n      })\n\n      this.onPauseAll(file.id, () => {\n        queuedRequest.abort()\n        socket.send('pause', {})\n      })\n\n      this.onCancelAll(file.id, ({ reason } = {}) => {\n        if (reason === 'user') {\n          queuedRequest.abort()\n          socket.send('cancel', {})\n          this.resetUploaderReferences(file.id)\n        }\n        resolve(`upload ${file.id} was canceled`)\n      })\n\n      this.onResumeAll(file.id, () => {\n        queuedRequest.abort()\n        if (file.error) {\n          socket.send('pause', {})\n        }\n        queuedRequest = this.requests.run(() => {\n          socket.open()\n          socket.send('resume', {})\n\n          return () => socket.close()\n        })\n      })\n\n      this.onRetry(file.id, () => {\n        // Only do the retry if the upload is actually in progress;\n        // else we could try to send these messages when the upload is still queued.\n        // We may need a better check for this since the socket may also be closed\n        // for other reasons, like network failures.\n        if (socket.isOpen) {\n          socket.send('pause', {})\n          socket.send('resume', {})\n        }\n      })\n\n      this.onRetryAll(file.id, () => {\n        if (socket.isOpen) {\n          socket.send('pause', {})\n          socket.send('resume', {})\n        }\n      })\n\n      socket.on('progress', (progressData) => emitSocketProgress(this, progressData, file))\n\n      socket.on('error', (errData) => {\n        this.uppy.emit('upload-error', file, new Error(errData.error))\n        this.resetUploaderReferences(file.id)\n        queuedRequest.done()\n        reject(new Error(errData.error))\n      })\n\n      socket.on('success', (data) => {\n        const uploadResp = {\n          uploadURL: data.url,\n        }\n\n        this.uppy.emit('upload-success', file, uploadResp)\n        this.resetUploaderReferences(file.id)\n        queuedRequest.done()\n        resolve()\n      })\n\n      queuedRequest = this.requests.run(() => {\n        if (file.isPaused) {\n          socket.send('pause', {})\n        } else {\n          socket.open()\n        }\n\n        return () => socket.close()\n      })\n    })\n  }\n\n  #upload = async (fileIDs) => {\n    if (fileIDs.length === 0) return undefined\n\n    const files = this.uppy.getFilesByIds(fileIDs)\n\n    const filesFiltered = filterNonFailedFiles(files)\n    const filesToEmit = filterFilesToEmitUploadStarted(filesFiltered)\n    this.uppy.emit('upload-start', filesToEmit)\n\n    const promises = filesFiltered.map((file) => {\n      if (file.isRemote) {\n        return this.#uploadRemote(file)\n      }\n      return this.#uploadFile(file)\n    })\n\n    return Promise.all(promises)\n  }\n\n  #setCompanionHeaders = () => {\n    this.#client.setCompanionHeaders(this.opts.companionHeaders)\n  }\n\n  onFileRemove (fileID, cb) {\n    this.uploaderEvents[fileID].on('file-removed', (file) => {\n      if (fileID === file.id) cb(file.id)\n    })\n  }\n\n  onFilePause (fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-pause', (targetFileID, isPaused) => {\n      if (fileID === targetFileID) {\n        cb(isPaused)\n      }\n    })\n  }\n\n  onRetry (fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-retry', (targetFileID) => {\n      if (fileID === targetFileID) {\n        cb()\n      }\n    })\n  }\n\n  onRetryAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('retry-all', () => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  onPauseAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('pause-all', () => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  onCancelAll (fileID, eventHandler) {\n    this.uploaderEvents[fileID].on('cancel-all', (...args) => {\n      if (!this.uppy.getFile(fileID)) return\n      eventHandler(...args)\n    })\n  }\n\n  onResumeAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('resume-all', () => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  install () {\n    const { capabilities } = this.uppy.getState()\n    this.uppy.setState({\n      capabilities: {\n        ...capabilities,\n        resumableUploads: true,\n      },\n    })\n    this.uppy.addPreProcessor(this.#setCompanionHeaders)\n    this.uppy.addUploader(this.#upload)\n  }\n\n  uninstall () {\n    const { capabilities } = this.uppy.getState()\n    this.uppy.setState({\n      capabilities: {\n        ...capabilities,\n        resumableUploads: false,\n      },\n    })\n    this.uppy.removePreProcessor(this.#setCompanionHeaders)\n    this.uppy.removeUploader(this.#upload)\n  }\n}\n"],"mappings":";;;;;;;;AAAA,OAAOA,UAAP,MAAuB,8BAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,aAA3B,QAAgD,wBAAhD;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,SAASC,oBAAT,EAA+BC,8BAA/B,QAAqE,6BAArE;AACA,SAASC,gBAAT,QAAiC,iCAAjC;MACOC,W;;;AACP,OAAOC,iBAAP,MAA8B,wBAA9B;;AAEA,SAASC,iBAAT,CAA4BC,GAA5B,EAAiC;EAC/B,IAAIA,GAAG,IAAIA,GAAG,CAACC,KAAf,EAAsB;IACpB,MAAMA,KAAK,GAAG,IAAIC,KAAJ,CAAUF,GAAG,CAACG,OAAd,CAAd;IACAC,MAAM,CAACC,MAAP,CAAcJ,KAAd,EAAqBD,GAAG,CAACC,KAAzB;IACA,MAAMA,KAAN;EACD;;EACD,OAAOD,GAAP;AACD;;AAED,SAASM,cAAT,CAAyBC,MAAzB,EAAiC;EAC/B,IAAIA,MAAJ,YAAIA,MAAM,CAAEC,OAAZ,EAAqB;IAAE,MAAMZ,gBAAgB,CAAC,2BAAD,EAA8B;MAAEa,KAAK,EAAEF,MAAM,CAACG;IAAhB,CAA9B,CAAtB;EAA+E;AACvG;;;;;;;;;;;;;;;;;;;;;;;;;;AAED,MAAMC,sBAAN,CAA6B;EAuB3BC,WAAW,CAAEC,UAAF,EAAYC,OAAZ,EAAqBC,mBAArB,EAA0C;IAAA;MAAA;IAAA;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA,OApB5C,IAAIC,OAAJ;IAoB4C;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;IAAA;IACnD,0DAAiBH,UAAjB;IACA,gFAA4BE,mBAA5B;IACA,KAAKE,UAAL,CAAgBH,OAAhB;EACD;;EAEDG,UAAU,CAAEH,OAAF,EAAW;IACnB,MAAMD,QAAQ,+BAAG,IAAH,uBAAd;;IAEA,IAAI,0BAA0BC,OAA9B,EAAuC;MACrC,kFAA6BD,QAAQ,CAACK,mBAAT,CAA6BJ,OAAO,CAACK,oBAArC,CAA7B;IACD;;IACD,IAAI,2BAA2BL,OAA/B,EAAwC;MACtC,oFAA8BD,QAAQ,CAACK,mBAAT,CAA6BJ,OAAO,CAACM,qBAArC,EAA4D;QAAEC,QAAQ,EAAC,CAAC;MAAZ,CAA5D,CAA9B;IACD;;IACD,IAAI,cAAcP,OAAlB,EAA2B;MACzB,sEAAuBD,QAAQ,CAACK,mBAAT,CAA6BJ,OAAO,CAACQ,QAArC,CAAvB;IACD;;IACD,IAAI,eAAeR,OAAnB,EAA4B;MAC1B,4DAAkBD,QAAQ,CAACK,mBAAT,CAA6BJ,OAAO,CAACS,SAArC,CAAlB;IACD;;IACD,IAAI,6BAA6BT,OAAjC,EAA0C;MACxC,oFAA8BD,QAAQ,CAACK,mBAAT,CAA6BJ,OAAO,CAACU,uBAArC,CAA9B;IACD;;IACD,IAAI,iBAAiBV,OAArB,EAA8B;MAAA;;MAC5B,sGAA2BA,OAAO,CAACW,WAAnC,qBAA2B,qBAAqBC,MAArB,EAA3B;IACD;;IACD,IAAI,qBAAqBZ,OAAzB,EAAkC;MAChC,wEAAwBD,QAAQ,CAACK,mBAAT,CAA6BJ,OAAO,CAACa,eAArC,EAAsD;QAAEN,QAAQ,EAACO;MAAX,CAAtD,CAAxB;IACD;EACF;;EAgEgB,MAAXC,WAAW,CAAEC,IAAF,EAAQvB,MAAR,EAAgB;IAC/B,MAAMwB,YAAY,GAAG,kDAAYC,GAAZ,CAAgBF,IAAI,CAACG,IAArB,CAArB;;IACA,IAAIF,YAAY,IAAI,IAApB,EAA0B;MACxB,OAAOA,YAAP;IACD;;IAED,MAAMG,OAAO,+BAAG,IAAH,kDAA+BJ,IAA/B,EAAqCvB,MAArC,CAAb;;IAEA,MAAM4B,YAAY,GAAG,MAAM;MACzBD,OAAO,CAACE,KAAR,CAAc7B,MAAM,CAACG,MAArB;;MACA,kDAAY2B,MAAZ,CAAmBP,IAAI,CAACG,IAAxB;IACD,CAHD;;IAIA1B,MAAM,CAAC+B,gBAAP,CAAwB,OAAxB,EAAiCH,YAAjC,EAA+C;MAAEI,IAAI,EAAE;IAAR,CAA/C;;IACA,kDAAYC,GAAZ,CAAgBV,IAAI,CAACG,IAArB,EAA2BC,OAA3B;;IACAA,OAAO,CAACO,IAAR,CAAa,MAAOC,MAAP,IAAkB;MAC7BnC,MAAM,CAACoC,mBAAP,CAA2B,OAA3B,EAAoCR,YAApC;;MACA,8EAA0BL,IAA1B,EAAgCY,MAAhC;;MACA,kDAAYF,GAAZ,CAAgBV,IAAI,CAACG,IAArB,EAA2BS,MAA3B;IACD,CAJD,EAIG,MAAM;MAAEnC,MAAM,CAACoC,mBAAP,CAA2B,OAA3B,EAAoCR,YAApC;IAAmD,CAJ9D;IAMA,OAAOD,OAAP;EACD;;EAEoB,MAAfU,eAAe,CAAEd,IAAF,EAAQ;IAC3B,MAAMY,MAAM,GAAG,kDAAYV,GAAZ,CAAgBF,IAAI,CAACG,IAArB,CAAf;;IACA,IAAIS,MAAM,IAAI,IAAd,EAAoB;MAClB;MACA;MACA,kCAAM,IAAN,gDAAiCZ,IAAjC,EAAuC,MAAMY,MAA7C;IACD;EACF;;EAEe,MAAVG,UAAU,CAAEf,IAAF,EAAQgB,MAAR,EAAgBvC,MAAhB,EAAwB;IACtCD,cAAc,CAACC,MAAD,CAAd;IACA,MAAM;MAAEwC,QAAF;MAAYC;IAAZ,IAAoB,MAAM,KAAKnB,WAAL,CAAiBC,IAAjB,EAAuBvB,MAAvB,CAAhC;IACAD,cAAc,CAACC,MAAD,CAAd;IACA,MAAM0C,KAAK,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,KAAc,KAAKC,WAAL,CAAiBzB,IAAjB,EAAuBwB,CAAC,GAAG,CAA3B,EAA8BD,KAA9B,EAAqC9C,MAArC,CAAzB,CAAZ,CAApB;IACAD,cAAc,CAACC,MAAD,CAAd;IACA,OAAO,kFAA4BuB,IAA5B,EAAkC;MAAEkB,GAAF;MAAOD,QAAP;MAAiBE,KAAjB;MAAwB1C;IAAxB,CAAlC,EAAoEiD,OAApE,CAA4EjD,MAA5E,CAAP;EACD;;EAEqB,MAAhBkD,gBAAgB,CAAE3B,IAAF,EAAQgB,MAAR,EAAgBvC,MAAhB,EAAwB;IAC5CD,cAAc,CAACC,MAAD,CAAd;IACA,MAAM;MAAEwC,QAAF;MAAYC;IAAZ,IAAoB,MAAM,KAAKnB,WAAL,CAAiBC,IAAjB,EAAuBvB,MAAvB,CAAhC;IACAD,cAAc,CAACC,MAAD,CAAd;IACA,MAAMmD,oBAAoB,GAAG,MAAM,0DAAgB5B,IAAhB,EAAsB;MAAEiB,QAAF;MAAYC,GAAZ;MAAiBzC;IAAjB,CAAtB,EAAiDiD,OAAjD,CAAyDjD,MAAzD,CAAnC;IACAD,cAAc,CAACC,MAAD,CAAd;IACA,MAAM0C,KAAK,GAAG,MAAMC,OAAO,CAACC,GAAR,CAClBL,MAAM,CACHM,GADH,CACO,CAACC,KAAD,EAAQC,CAAR,KAAc;MACjB,MAAMK,UAAU,GAAGL,CAAC,GAAG,CAAvB;MACA,MAAMM,mBAAmB,GAAGF,oBAAoB,CAACG,IAArB,CAA0B;QAAA,IAAC;UAAEC;QAAF,CAAD;QAAA,OAAoBA,UAAU,KAAKH,UAAnC;MAAA,CAA1B,CAA5B;MACA,OAAOC,mBAAmB,IAAI,IAAvB,GACH,KAAKL,WAAL,CAAiBzB,IAAjB,EAAuB6B,UAAvB,EAAmCN,KAAnC,EAA0C9C,MAA1C,CADG,GAEH;QAAEuD,UAAU,EAAEH,UAAd;QAA0BI,IAAI,EAAEH,mBAAmB,CAACG;MAApD,CAFJ;IAGD,CAPH,CADkB,CAApB;IAUAzD,cAAc,CAACC,MAAD,CAAd;IACA,OAAO,kFAA4BuB,IAA5B,EAAkC;MAAEkB,GAAF;MAAOD,QAAP;MAAiBE,KAAjB;MAAwB1C;IAAxB,CAAlC,EAAoEiD,OAApE,CAA4EjD,MAA5E,CAAP;EACD;;EAEgB,MAAXgD,WAAW,CAAEzB,IAAF,EAAQ6B,UAAR,EAAoBN,KAApB,EAA2B9C,MAA3B,EAAmC;IAClDD,cAAc,CAACC,MAAD,CAAd;IACA,MAAM;MAAEwC,QAAF;MAAYC;IAAZ,IAAoB,MAAM,KAAKnB,WAAL,CAAiBC,IAAjB,EAAuBvB,MAAvB,CAAhC;IACAD,cAAc,CAACC,MAAD,CAAd;;IACA,SAAS;MACP,MAAMyD,SAAS,GAAGX,KAAK,CAACY,OAAN,EAAlB;MACA,MAAM;QAAEC,UAAF;QAAcC;MAAd,IAA6Bd,KAAnC;MAEA,MAAMe,SAAS,GAAG,MAAM,oEAAqBtC,IAArB,EAA2B;QACjDiB,QADiD;QACvCC,GADuC;QAClCW,UADkC;QACtBU,IAAI,EAAEL,SADgB;QACLzD;MADK,CAA3B,EAErBiD,OAFqB,CAEbjD,MAFa,CAAxB;MAIAD,cAAc,CAACC,MAAD,CAAd;;MACA,IAAI;QACF,OAAO;UACLuD,UAAU,EAAEH,UADP;UAEL,IAAG,MAAM,sEAAsB;YAAES,SAAF;YAAaC,IAAI,EAAEL,SAAnB;YAA8BE,UAA9B;YAA0CC,UAA1C;YAAsD5D;UAAtD,CAAtB,EAAsFiD,OAAtF,CAA8FjD,MAA9F,CAAT;QAFK,CAAP;MAID,CALD,CAKE,OAAO+D,GAAP,EAAY;QACZ,IAAI,EAAC,kCAAM,IAAN,8BAAwBA,GAAxB,CAAD,CAAJ,EAAmC,MAAMA,GAAN;MACpC;IACF;EACF;;AAxM0B;;6BAuDPA,G,EAAK;EAAA;;EACvB,MAAMzD,QAAQ,+BAAG,IAAH,uBAAd;;EACA,MAAM0D,MAAM,GAAGD,GAAH,mCAAGA,GAAG,CAAEE,MAAR,qBAAG,YAAaD,MAA5B,CAFuB,CAIvB;EACA;;EACA,IAAIA,MAAM,IAAI,IAAd,EAAoB;IAClB,OAAO,KAAP;EACD;;EACD,IAAIA,MAAM,KAAK,GAAX,IAAkBD,GAAG,CAACnE,OAAJ,KAAgB,qBAAtC,EAA6D;IAC3D,IAAI,CAACU,QAAQ,CAAC4D,QAAd,EAAwB;MACtB;MACA;MACA;MACA,IAAI5D,QAAQ,CAAC6D,KAAT,KAAmB,CAAnB,IAAwB,+EAA4B,IAAxD,EAA8D;QAAA;;QAC5D,MAAMC,IAAI,wDAAG,IAAH,gEAAG,sBAA0BA,IAA1B,EAAb;;QACA,IAAIA,IAAI,IAAI,IAAR,IAAgBA,IAAI,CAACC,IAAzB,EAA+B;UAC7B,OAAO,KAAP;QACD,CAJ2D,CAK5D;QACA;QACA;QACA;QACA;QACA;;;QACA,8EAA2BD,IAAI,CAACE,KAAhC;MACD,CAhBqB,CAiBtB;;;MACAhE,QAAQ,CAACiE,SAAT,CAAmB,CAAnB;MACA,MAAM,IAAI5B,OAAJ,CAAY6B,OAAO,IAAIC,UAAU,CAACD,OAAD,8BAAU,IAAV,4CAAjC,CAAN;IACD;EACF,CAtBD,MAsBO,IAAIR,MAAM,KAAK,GAAf,EAAoB;IACzB;IACA,IAAI,CAAC1D,QAAQ,CAAC4D,QAAd,EAAwB;MAAA;;MACtB,MAAME,IAAI,yDAAG,IAAH,gEAAG,uBAA0BA,IAA1B,EAAb;;MACA,IAAIA,IAAI,IAAI,IAAR,IAAgBA,IAAI,CAACC,IAAzB,EAA+B;QAC7B,OAAO,KAAP;MACD;;MACD/D,QAAQ,CAACiE,SAAT,CAAmBH,IAAI,CAACE,KAAxB;IACD;EACF,CATM,MASA,IAAIN,MAAM,GAAG,GAAT,IAAgBA,MAAM,GAAG,GAAzB,IAAgCA,MAAM,KAAK,GAA/C,EAAoD;IACzD;IACA,OAAO,KAAP;EACD,CAHM,MAGA,IAAI,OAAOU,SAAP,KAAqB,WAArB,IAAoCA,SAAS,CAACC,MAAV,KAAqB,KAA7D,EAAoE;IACzE;IACA,IAAI,CAACrE,QAAQ,CAAC4D,QAAd,EAAwB;MACtB5D,QAAQ,CAACsE,KAAT;MACAC,MAAM,CAAC9C,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;QACtCzB,QAAQ,CAACwE,MAAT;MACD,CAFD,EAEG;QAAE9C,IAAI,EAAE;MAAR,CAFH;IAGD;EACF,CARM,MAQA;IAAA;;IACL;IACA,MAAMoC,IAAI,yDAAG,IAAH,gEAAG,uBAA0BA,IAA1B,EAAb;;IACA,IAAIA,IAAI,IAAI,IAAR,IAAgBA,IAAI,CAACC,IAAzB,EAA+B;MAC7B,OAAO,KAAP;IACD;;IACD,MAAM,IAAI1B,OAAJ,CAAY6B,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUJ,IAAI,CAACE,KAAf,CAAjC,CAAN;EACD;;EACD,OAAO,IAAP;AACD;;;;;;;;;;;;;;;;;;;;cA8IAS,MAAM,CAACC,GAAP,CAAW,sBAAX,C;AAtDH,eAAe,MAAMC,cAAN,SAA6BtG,UAA7B,CAAwC;EASrD0B,WAAW,CAAE6E,IAAF,EAAQC,KAAR,EAAc;IAAA;;IACvB,MAAMD,IAAN,EAAYC,KAAZ;IADuB;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA,OAiOF,CAAC5D,IAAD,YAA6B;QAAA,IAAtB;UAAEkB,GAAF;UAAOD;QAAP,CAAsB;QAClD,MAAM4C,KAAK,GAAG,KAAKF,IAAL,CAAUG,OAAV,CAAkB9D,IAAI,CAAC+D,EAAvB,CAAd;QACA,KAAKJ,IAAL,CAAUK,YAAV,CAAuBhE,IAAI,CAAC+D,EAA5B,EAAgC;UAC9BE,WAAW,EAAE,EACX,GAAGJ,KAAK,CAACI,WADE;YAEX/C,GAFW;YAGXD;UAHW;QADiB,CAAhC;MAOD;IA1OwB;IAAA;MAAA;MAAA,OA6UH,MAAOjB,IAAP,IAAgB;QACpC,MAAMkE,MAAM,GAAGlE,IAAI,CAACmE,MAAL,CAAYC,eAAZ,CAA4BC,QAA5B,GAAuC/G,QAAvC,GAAkDC,aAAjE;QACA,MAAM+G,MAAM,GAAG,IAAIJ,MAAJ,CAAW,KAAKP,IAAhB,EAAsB3D,IAAI,CAACmE,MAAL,CAAYC,eAAlC,CAAf;QACA,MAAMR,IAAI,GAAG,EAAE,GAAG,KAAKA;QAAV,CAAb;;QAEA,IAAI5D,IAAI,CAACuE,GAAT,EAAc;UACZ;UACAjG,MAAM,CAACC,MAAP,CAAcqF,IAAd,EAAoB5D,IAAI,CAACuE,GAAzB;QACD;;QAED,IAAIvE,IAAI,CAACmE,MAAL,CAAYK,GAAZ,IAAmB,IAAvB,EAA6B;UAC3B,MAAM,IAAIpG,KAAJ,CAAU,oCAAV,CAAN;QACD;;QAED,MAAMF,GAAG,GAAG,MAAMoG,MAAM,CAACG,IAAP,CAAYzE,IAAI,CAACmE,MAAL,CAAYK,GAAxB,EAA6B,EAC7C,GAAGxE,IAAI,CAACmE,MAAL,CAAY5B,IAD8B;UAE7CmC,QAAQ,EAAE,cAFmC;UAG7CC,IAAI,EAAE3E,IAAI,CAACG,IAAL,CAAUwE,IAH6B;UAI7CC,QAAQ,EAAE5E,IAAI,CAAC6E;QAJ8B,CAA7B,CAAlB;QAMA,OAAO3G,GAAG,CAAC4G,KAAX;MACD;IAlWwB;IAAA;MAAA;MAAA,OAyef,MAAOC,OAAP,IAAmB;QAC3B,IAAIA,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B,OAAOC,SAAP;QAE1B,MAAMC,KAAK,GAAG,KAAKvB,IAAL,CAAUwB,aAAV,CAAwBJ,OAAxB,CAAd;QAEA,MAAMK,aAAa,GAAGxH,oBAAoB,CAACsH,KAAD,CAA1C;QACA,MAAMG,WAAW,GAAGxH,8BAA8B,CAACuH,aAAD,CAAlD;QACA,KAAKzB,IAAL,CAAU2B,IAAV,CAAe,cAAf,EAA+BD,WAA/B;QAEA,MAAME,QAAQ,GAAGH,aAAa,CAAC9D,GAAd,CAAmBtB,IAAD,IAAU;UAC3C,IAAIA,IAAI,CAACwF,QAAT,EAAmB;YACjB,mCAAO,IAAP,gCAA0BxF,IAA1B;UACD;;UACD,mCAAO,IAAP,4BAAwBA,IAAxB;QACD,CALgB,CAAjB;QAOA,OAAOoB,OAAO,CAACC,GAAR,CAAYkE,QAAZ,CAAP;MACD;IA1fwB;IAAA;MAAA;MAAA,OA4fF,MAAM;QAC3B,oDAAaE,mBAAb,CAAiC,KAAK7B,IAAL,CAAU8B,gBAA3C;MACD;IA9fwB;IAEvB,KAAKC,IAAL,GAAY,UAAZ;IACA,KAAK5B,EAAL,GAAU,KAAKH,IAAL,CAAUG,EAAV,IAAgB,gBAA1B;IACA,KAAK6B,KAAL,GAAa,kBAAb;IACA,sDAAe,IAAIrI,aAAJ,CAAkBoG,IAAlB,EAAwBC,KAAxB,CAAf;IAEA,MAAMiC,cAAc,GAAG;MACrB;MACAC,iBAAiB,EAAE,IAFE;MAGrBlD,KAAK,EAAE,CAHc;MAIrBjD,WAAW,EAAE,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,EAAgB,IAAhB,CAJQ;MAKrBL,qBAAqB,EAAE,KAAKA,qBAAL,CAA2ByG,IAA3B,CAAgC,IAAhC,CALF;MAMrBtG,SAAS,EAAE,KAAKA,SAAL,CAAesG,IAAf,CAAoB,IAApB,CANU;MAOrB1G,oBAAoB,EAAE,KAAKA,oBAAL,CAA0B0G,IAA1B,CAA+B,IAA/B,CAPD;MAQrBrG,uBAAuB,EAAE,KAAKA,uBAAL,CAA6BqG,IAA7B,CAAkC,IAAlC,CARJ;MASrBvG,QAAQ,EAAE,KAAKA,QAAL,CAAcuG,IAAd,CAAmB,IAAnB,CATW;MAUrBlG,eAAe,EAAE6D,cAAc,CAAC7D,eAVX;MAWrB6F,gBAAgB,EAAE;IAXG,CAAvB;IAcA,KAAK9B,IAAL,GAAY,EAAE,GAAGiC,cAAL;MAAqB,GAAGjC;IAAxB,CAAZ;;IACA,IAAI,CAAAA,KAAI,QAAJ,YAAAA,KAAI,CAAEoC,kBAAN,KAA4B,IAA5B,IAAoCpC,KAAI,CAACpE,QAAL,IAAiB,IAAzD,EAA+D;MAC7D,KAAKoE,IAAL,CAAUpE,QAAV,GAAqB,OAAOQ,IAAP,YAA6D;QAAA,IAAhD;UAAEiB,QAAF;UAAYC,GAAZ;UAAiBW,UAAjB;UAA6BU,IAA7B;UAAmC9D;QAAnC,CAAgD;QAChF,MAAM;UAAEwH,aAAF;UAAiBC;QAAjB,IAA6B,MAAMtC,KAAI,CAC1CoC,kBADsC,CACnBhG,IADmB,EACb;UAAEiB,QAAF;UAAYC,GAAZ;UAAiBC,KAAK,EAAE,CAAC;YAAEgF,MAAM,EAAEtE,UAAV;YAAsBN,KAAK,EAAEgB;UAA7B,CAAD,CAAxB;UAA+D9D;QAA/D,CADa,CAAzC;QAEA,OAAO;UAAE+F,GAAG,EAAEyB,aAAF,oBAAEA,aAAa,CAAGpE,UAAH,CAApB;UAAoCqE,OAAO,EAAEA,OAAF,oBAAEA,OAAO,CAAGrE,UAAH;QAApD,CAAP;MACD,CAJD;IAKD;IAED;AACJ;AACA;AACA;AACA;;;IACI,KAAK9C,QAAL,4BAAgB,KAAK6E,IAAL,CAAUwC,gBAA1B,oCAA8C,IAAIzI,gBAAJ,CAAqB,KAAKiG,IAAL,CAAUhB,KAA/B,CAA9C;IACA,gGAAoC,IAAI/D,sBAAJ,CAA2B,KAAKE,QAAhC,EAA0C,KAAK6E,IAA/C,8BAAqD,IAArD,gDAApC;IAEA,KAAKyC,SAAL,GAAiB/H,MAAM,CAACgI,MAAP,CAAc,IAAd,CAAjB;IACA,KAAKC,cAAL,GAAsBjI,MAAM,CAACgI,MAAP,CAAc,IAAd,CAAtB;IACA,KAAKE,eAAL,GAAuBlI,MAAM,CAACgI,MAAP,CAAc,IAAd,CAAvB;IAEA,wFAAgC,KAAKvH,QAAL,CAAcK,mBAAd,6BAAkC,IAAlC,6CAA4D;MAAEG,QAAQ,EAAE,CAAC;IAAb,CAA5D,CAAhC;EACD;;EAED,gBAAwC;IAAE,mCAAO,IAAP;EAAqB;;EAE/DJ,UAAU,CAAEsH,UAAF,EAAc;IACtB,8FAAkCtH,UAAlC,CAA6CsH,UAA7C;;IACA,OAAO,MAAMtH,UAAN,CAAiBsH,UAAjB,CAAP;EACD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;;;EACEC,uBAAuB,CAAEC,MAAF,EAAU/C,IAAV,EAAqB;IAAA,IAAXA,IAAW;MAAXA,IAAW,GAAJ,EAAI;IAAA;;IAC1C,IAAI,KAAKyC,SAAL,CAAeM,MAAf,CAAJ,EAA4B;MAC1B,KAAKN,SAAL,CAAeM,MAAf,EAAuBrG,KAAvB,CAA6B;QAAEsG,MAAM,EAAEhD,IAAI,CAACtD,KAAL,IAAc;MAAxB,CAA7B;MACA,KAAK+F,SAAL,CAAeM,MAAf,IAAyB,IAAzB;IACD;;IACD,IAAI,KAAKJ,cAAL,CAAoBI,MAApB,CAAJ,EAAiC;MAC/B,KAAKJ,cAAL,CAAoBI,MAApB,EAA4BE,MAA5B;MACA,KAAKN,cAAL,CAAoBI,MAApB,IAA8B,IAA9B;IACD;;IACD,IAAI,KAAKH,eAAL,CAAqBG,MAArB,CAAJ,EAAkC;MAChC,KAAKH,eAAL,CAAqBG,MAArB,EAA6BG,KAA7B;MACA,KAAKN,eAAL,CAAqBG,MAArB,IAA+B,IAA/B;IACD;EACF,CAjFoD,CAmFrD;;;EACAI,UAAU,CAAEC,MAAF,EAAU;IAClB,IAAI,CAAC,KAAKpD,IAAL,CAAUqD,YAAf,EAA6B;MAC3B,MAAM,IAAI7I,KAAJ,CAAW,oHAAmH4I,MAAO,oBAArI,CAAN;IACD;EACF;;EAED1H,qBAAqB,CAAEU,IAAF,EAAQvB,MAAR,EAAgB;IAAA;;IACnC,KAAKsI,UAAL,CAAgB,uBAAhB;IACAvI,cAAc,CAACC,MAAD,CAAd;IAEA,MAAMmG,QAAQ,GAAG5E,IAAI,CAAC6E,IAAL,GAAYvG,MAAM,CAAC4I,WAAP,CAC3B,0BAAC,KAAKtD,IAAL,CAAUkC,iBAAX,oCAAgCxH,MAAM,CAAC6I,IAAP,CAAYnH,IAAI,CAAC6E,IAAjB,CAAhC,EACGuC,MADH,CACUlG,GAAG,IAAIlB,IAAI,CAAC6E,IAAL,CAAU3D,GAAV,KAAkB,IADnC,EAEGI,GAFH,CAEOJ,GAAG,IAAI,CAACA,GAAD,EAAMmG,MAAM,CAACrH,IAAI,CAAC6E,IAAL,CAAU3D,GAAV,CAAD,CAAZ,CAFd,CAD2B,CAAZ,GAIb,EAJJ;IAMA,OAAO,oDAAauD,IAAb,CAAkB,cAAlB,EAAkC;MACvC6C,QAAQ,EAAEtH,IAAI,CAACuH,IADwB;MAEvC5B,IAAI,EAAE3F,IAAI,CAAC2F,IAF4B;MAGvCf;IAHuC,CAAlC,EAIJ;MAAEnG;IAAF,CAJI,EAIQkC,IAJR,CAIa1C,iBAJb,CAAP;EAKD;;EAEDwB,SAAS,CAAEO,IAAF,SAA2BvB,MAA3B,EAAmC;IAAA,IAA3B;MAAEyC,GAAF;MAAOD;IAAP,CAA2B;IAC1C,KAAK8F,UAAL,CAAgB,WAAhB;IACAvI,cAAc,CAACC,MAAD,CAAd;IAEA,MAAM6I,QAAQ,GAAGE,kBAAkB,CAACtG,GAAD,CAAnC;IACA,OAAO,oDAAahB,GAAb,CAAkB,gBAAee,QAAS,QAAOqG,QAAS,EAA1D,EAA6D;MAAE7I;IAAF,CAA7D,EACJkC,IADI,CACC1C,iBADD,CAAP;EAED;;EAEDyB,uBAAuB,CAAEM,IAAF,SAAkCvB,MAAlC,EAA0C;IAAA,IAAlC;MAAEyC,GAAF;MAAOD,QAAP;MAAiBE;IAAjB,CAAkC;IAC/D,KAAK4F,UAAL,CAAgB,yBAAhB;IACAvI,cAAc,CAACC,MAAD,CAAd;IAEA,MAAM6I,QAAQ,GAAGE,kBAAkB,CAACtG,GAAD,CAAnC;IACA,MAAMuG,WAAW,GAAGD,kBAAkB,CAACvG,QAAD,CAAtC;IACA,OAAO,oDAAawD,IAAb,CAAmB,gBAAegD,WAAY,iBAAgBH,QAAS,EAAvE,EAA0E;MAAEnG;IAAF,CAA1E,EAAqF;MAAE1C;IAAF,CAArF,EACJkC,IADI,CACC1C,iBADD,CAAP;EAED;;EAEDuB,QAAQ,CAAEQ,IAAF,SAA+C;IAAA,IAAvC;MAAEiB,QAAF;MAAYC,GAAZ;MAAiBW,UAAjB;MAA6BpD;IAA7B,CAAuC;IACrD,KAAKsI,UAAL,CAAgB,UAAhB;IACAvI,cAAc,CAACC,MAAD,CAAd;;IAEA,IAAIwC,QAAQ,IAAI,IAAZ,IAAoBC,GAAG,IAAI,IAA3B,IAAmCW,UAAU,IAAI,IAArD,EAA2D;MACzD,MAAM,IAAIzD,KAAJ,CAAU,0DAAV,CAAN;IACD;;IAED,MAAMkJ,QAAQ,GAAGE,kBAAkB,CAACtG,GAAD,CAAnC;IACA,OAAO,oDAAahB,GAAb,CAAkB,gBAAee,QAAS,IAAGY,UAAW,QAAOyF,QAAS,EAAxE,EAA2E;MAAE7I;IAAF,CAA3E,EACJkC,IADI,CACC1C,iBADD,CAAP;EAED;;EAEDoB,oBAAoB,CAAEW,IAAF,SAA2BvB,MAA3B,EAAmC;IAAA,IAA3B;MAAEyC,GAAF;MAAOD;IAAP,CAA2B;IACrD,KAAK8F,UAAL,CAAgB,sBAAhB;IAEA,MAAMO,QAAQ,GAAGE,kBAAkB,CAACtG,GAAD,CAAnC;IACA,MAAMuG,WAAW,GAAGD,kBAAkB,CAACvG,QAAD,CAAtC;IACA,OAAO,oDAAaV,MAAb,CAAqB,gBAAekH,WAAY,QAAOH,QAAS,EAAhE,EAAmErC,SAAnE,EAA8E;MAAExG;IAAF,CAA9E,EACJkC,IADI,CACC1C,iBADD,CAAP;EAED;;EAE2B,aAAf4B,eAAe,QAAkF;IAAA,IAAhF;MAAEyC,SAAS,EAAE;QAAEkC,GAAF;QAAOkD,OAAP;QAAgBxB;MAAhB,CAAb;MAAwC3D,IAAxC;MAA8CH,UAA9C;MAA0DC,UAA1D;MAAsE5D;IAAtE,CAAgF;IAC5GD,cAAc,CAACC,MAAD,CAAd;;IAEA,IAAI+F,GAAG,IAAI,IAAX,EAAiB;MACf,MAAM,IAAIpG,KAAJ,CAAU,mCAAV,CAAN;IACD;;IAED,OAAO,IAAIgD,OAAJ,CAAY,CAAC6B,OAAD,EAAU0E,MAAV,KAAqB;MACtC,MAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;MACAD,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBtD,GAAhB,EAAqB,IAArB;;MACA,IAAI0B,OAAJ,EAAa;QACX5H,MAAM,CAAC6I,IAAP,CAAYjB,OAAZ,EAAqB6B,OAArB,CAA8B7G,GAAD,IAAS;UACpC0G,GAAG,CAACI,gBAAJ,CAAqB9G,GAArB,EAA0BgF,OAAO,CAAChF,GAAD,CAAjC;QACD,CAFD;MAGD;;MACD0G,GAAG,CAACK,YAAJ,GAAmB,MAAnB;;MACA,IAAI,OAAOP,OAAP,KAAmB,QAAvB,EAAiC;QAC/BE,GAAG,CAACM,OAAJ,GAAcR,OAAO,GAAG,IAAxB;MACD;;MAED,SAASS,OAAT,GAAoB;QAClBP,GAAG,CAACtH,KAAJ;MACD;;MACD,SAAS8H,OAAT,GAAoB;QAClB3J,MAAM,CAACoC,mBAAP,CAA2B,OAA3B,EAAoCsH,OAApC;MACD;;MACD1J,MAAM,CAAC+B,gBAAP,CAAwB,OAAxB,EAAiC2H,OAAjC;MAEAP,GAAG,CAACS,MAAJ,CAAW7H,gBAAX,CAA4B,UAA5B,EAAwC4B,UAAxC;MAEAwF,GAAG,CAACpH,gBAAJ,CAAqB,OAArB,EAA8B,MAAM;QAClC4H,OAAO;QAEPT,MAAM,CAAC7J,gBAAgB,EAAjB,CAAN;MACD,CAJD;MAMA8J,GAAG,CAACpH,gBAAJ,CAAqB,SAArB,EAAgC,MAAM;QACpC4H,OAAO;QAEP,MAAMjK,KAAK,GAAG,IAAIC,KAAJ,CAAU,qBAAV,CAAd;QACAD,KAAK,CAACuE,MAAN,GAAe;UAAED,MAAM,EAAE;QAAV,CAAf;QACAkF,MAAM,CAACxJ,KAAD,CAAN;MACD,CAND;MAOAyJ,GAAG,CAACpH,gBAAJ,CAAqB,MAArB,EAA8B8H,EAAD,IAAQ;QACnCF,OAAO;;QAEP,IAAIE,EAAE,CAACC,MAAH,CAAU9F,MAAV,KAAqB,GAArB,IAA4B6F,EAAE,CAACC,MAAH,CAAUC,YAAV,CAAuBC,QAAvB,CAAgC,wCAAhC,CAAhC,EAA2G;UACzG,MAAMtK,KAAK,GAAG,IAAIC,KAAJ,CAAU,qBAAV,CAAd;UACAD,KAAK,CAACuE,MAAN,GAAe4F,EAAE,CAACC,MAAlB;UACAZ,MAAM,CAACxJ,KAAD,CAAN;UACA;QACD;;QAAC,IAAImK,EAAE,CAACC,MAAH,CAAU9F,MAAV,GAAmB,GAAnB,IAA0B6F,EAAE,CAACC,MAAH,CAAU9F,MAAV,IAAoB,GAAlD,EAAuD;UACvD,MAAMtE,KAAK,GAAG,IAAIC,KAAJ,CAAU,SAAV,CAAd;UACAD,KAAK,CAACuE,MAAN,GAAe4F,EAAE,CAACC,MAAlB;UACAZ,MAAM,CAACxJ,KAAD,CAAN;UACA;QACD;;QAEDiE,UAAU,QAAV,YAAAA,UAAU,CAAGG,IAAI,CAACoC,IAAR,CAAV,CAfmC,CAiBnC;;QACA,MAAM+D,IAAI,GAAGJ,EAAE,CAACC,MAAH,CAAUI,iBAAV,CAA4B,MAA5B,CAAb;;QAEA,IAAID,IAAI,KAAK,IAAb,EAAmB;UACjBf,MAAM,CAAC,IAAIvJ,KAAJ,CAAU,2MAAV,CAAD,CAAN;UACA;QACD;;QAEDiE,UAAU,QAAV,YAAAA,UAAU,CAAGqG,IAAH,CAAV;QACAzF,OAAO,CAAC;UACNhB,IAAI,EAAEyG;QADA,CAAD,CAAP;MAGD,CA7BD;MA+BAd,GAAG,CAACpH,gBAAJ,CAAqB,OAArB,EAA+B8H,EAAD,IAAQ;QACpCF,OAAO;QAEP,MAAMjK,KAAK,GAAG,IAAIC,KAAJ,CAAU,eAAV,CAAd;QACAD,KAAK,CAACuE,MAAN,GAAe4F,EAAE,CAACC,MAAlB;QACAZ,MAAM,CAACxJ,KAAD,CAAN;MACD,CAND;MAQAyJ,GAAG,CAACgB,IAAJ,CAASrG,IAAT;IACD,CA5EM,CAAP;EA6ED;;EA2J0B,MAArBsG,qBAAqB,CAAE7I,IAAF,EAAQ;IAAA;;IACjC,OAAO,IAAIoB,OAAJ,CAAY,CAAC6B,OAAD,EAAU0E,MAAV,KAAqB;MACtC,IAAImB,aAAJ;MAEA,MAAMhE,KAAK,GAAG9E,IAAI,CAAC+I,WAAnB;MACA,MAAMC,IAAI,GAAGtL,aAAa,CAACsC,IAAI,CAACmE,MAAL,CAAY8C,YAAb,CAA1B;MACA,MAAMgC,MAAM,GAAG,IAAI5L,MAAJ,CAAW;QAAEkL,MAAM,EAAG,GAAES,IAAK,QAAOlE,KAAM,EAA/B;QAAkCoE,QAAQ,EAAE;MAA5C,CAAX,CAAf;MACA,KAAK1C,eAAL,CAAqBxG,IAAI,CAAC+D,EAA1B,IAAgCkF,MAAhC;MACA,KAAK1C,cAAL,CAAoBvG,IAAI,CAAC+D,EAAzB,IAA+B,IAAIvG,YAAJ,CAAiB,KAAKmG,IAAtB,CAA/B;MAEA,KAAKwF,YAAL,CAAkBnJ,IAAI,CAAC+D,EAAvB,EAA2B,MAAM;QAC/B+E,aAAa,CAACxI,KAAd;QACA2I,MAAM,CAACL,IAAP,CAAY,QAAZ,EAAsB,EAAtB;QACA,KAAKlC,uBAAL,CAA6B1G,IAAI,CAAC+D,EAAlC,EAAsC;UAAEzD,KAAK,EAAE;QAAT,CAAtC;QACA2C,OAAO,CAAE,UAASjD,IAAI,CAAC+D,EAAG,cAAnB,CAAP;MACD,CALD;MAOA,KAAKqF,WAAL,CAAiBpJ,IAAI,CAAC+D,EAAtB,EAA2BpB,QAAD,IAAc;QACtC,IAAIA,QAAJ,EAAc;UACZ;UACAmG,aAAa,CAACxI,KAAd;UACA2I,MAAM,CAACL,IAAP,CAAY,OAAZ,EAAqB,EAArB;QACD,CAJD,MAIO;UACL;UACA;UACAE,aAAa,CAACxI,KAAd;UACAwI,aAAa,GAAG,KAAK/J,QAAL,CAAcsK,GAAd,CAAkB,MAAM;YACtCJ,MAAM,CAACnB,IAAP;YACAmB,MAAM,CAACL,IAAP,CAAY,QAAZ,EAAsB,EAAtB;YACA,OAAO,MAAMK,MAAM,CAACnC,KAAP,EAAb;UACD,CAJe,CAAhB;QAKD;MACF,CAfD;MAiBA,KAAKwC,UAAL,CAAgBtJ,IAAI,CAAC+D,EAArB,EAAyB,MAAM;QAC7B+E,aAAa,CAACxI,KAAd;QACA2I,MAAM,CAACL,IAAP,CAAY,OAAZ,EAAqB,EAArB;MACD,CAHD;MAKA,KAAKW,WAAL,CAAiBvJ,IAAI,CAAC+D,EAAtB,EAA0B,iBAAqB;QAAA,IAApB;UAAEnF;QAAF,CAAoB,sBAAP,EAAO;;QAC7C,IAAIA,MAAM,KAAK,MAAf,EAAuB;UACrBkK,aAAa,CAACxI,KAAd;UACA2I,MAAM,CAACL,IAAP,CAAY,QAAZ,EAAsB,EAAtB;;UACA,KAAI,CAAClC,uBAAL,CAA6B1G,IAAI,CAAC+D,EAAlC;QACD;;QACDd,OAAO,CAAE,UAASjD,IAAI,CAAC+D,EAAG,eAAnB,CAAP;MACD,CAPD;MASA,KAAKyF,WAAL,CAAiBxJ,IAAI,CAAC+D,EAAtB,EAA0B,MAAM;QAC9B+E,aAAa,CAACxI,KAAd;;QACA,IAAIN,IAAI,CAAC7B,KAAT,EAAgB;UACd8K,MAAM,CAACL,IAAP,CAAY,OAAZ,EAAqB,EAArB;QACD;;QACDE,aAAa,GAAG,KAAK/J,QAAL,CAAcsK,GAAd,CAAkB,MAAM;UACtCJ,MAAM,CAACnB,IAAP;UACAmB,MAAM,CAACL,IAAP,CAAY,QAAZ,EAAsB,EAAtB;UAEA,OAAO,MAAMK,MAAM,CAACnC,KAAP,EAAb;QACD,CALe,CAAhB;MAMD,CAXD;MAaA,KAAK2C,OAAL,CAAazJ,IAAI,CAAC+D,EAAlB,EAAsB,MAAM;QAC1B;QACA;QACA;QACA;QACA,IAAIkF,MAAM,CAACS,MAAX,EAAmB;UACjBT,MAAM,CAACL,IAAP,CAAY,OAAZ,EAAqB,EAArB;UACAK,MAAM,CAACL,IAAP,CAAY,QAAZ,EAAsB,EAAtB;QACD;MACF,CATD;MAWA,KAAKe,UAAL,CAAgB3J,IAAI,CAAC+D,EAArB,EAAyB,MAAM;QAC7B,IAAIkF,MAAM,CAACS,MAAX,EAAmB;UACjBT,MAAM,CAACL,IAAP,CAAY,OAAZ,EAAqB,EAArB;UACAK,MAAM,CAACL,IAAP,CAAY,QAAZ,EAAsB,EAAtB;QACD;MACF,CALD;MAOAK,MAAM,CAACW,EAAP,CAAU,UAAV,EAAuBC,YAAD,IAAkBpM,kBAAkB,CAAC,IAAD,EAAOoM,YAAP,EAAqB7J,IAArB,CAA1D;MAEAiJ,MAAM,CAACW,EAAP,CAAU,OAAV,EAAoBE,OAAD,IAAa;QAC9B,KAAKnG,IAAL,CAAU2B,IAAV,CAAe,cAAf,EAA+BtF,IAA/B,EAAqC,IAAI5B,KAAJ,CAAU0L,OAAO,CAAC3L,KAAlB,CAArC;QACA,KAAKuI,uBAAL,CAA6B1G,IAAI,CAAC+D,EAAlC;QACA+E,aAAa,CAAChG,IAAd;QACA6E,MAAM,CAAC,IAAIvJ,KAAJ,CAAU0L,OAAO,CAAC3L,KAAlB,CAAD,CAAN;MACD,CALD;MAOA8K,MAAM,CAACW,EAAP,CAAU,SAAV,EAAsBzJ,IAAD,IAAU;QAC7B,MAAM4J,UAAU,GAAG;UACjBC,SAAS,EAAE7J,IAAI,CAACqE;QADC,CAAnB;QAIA,KAAKb,IAAL,CAAU2B,IAAV,CAAe,gBAAf,EAAiCtF,IAAjC,EAAuC+J,UAAvC;QACA,KAAKrD,uBAAL,CAA6B1G,IAAI,CAAC+D,EAAlC;QACA+E,aAAa,CAAChG,IAAd;QACAG,OAAO;MACR,CATD;MAWA6F,aAAa,GAAG,KAAK/J,QAAL,CAAcsK,GAAd,CAAkB,MAAM;QACtC,IAAIrJ,IAAI,CAAC2C,QAAT,EAAmB;UACjBsG,MAAM,CAACL,IAAP,CAAY,OAAZ,EAAqB,EAArB;QACD,CAFD,MAEO;UACLK,MAAM,CAACnB,IAAP;QACD;;QAED,OAAO,MAAMmB,MAAM,CAACnC,KAAP,EAAb;MACD,CARe,CAAhB;IASD,CA3GM,CAAP;EA4GD;;EAyBDqC,YAAY,CAAExC,MAAF,EAAUsD,EAAV,EAAc;IACxB,KAAK1D,cAAL,CAAoBI,MAApB,EAA4BiD,EAA5B,CAA+B,cAA/B,EAAgD5J,IAAD,IAAU;MACvD,IAAI2G,MAAM,KAAK3G,IAAI,CAAC+D,EAApB,EAAwBkG,EAAE,CAACjK,IAAI,CAAC+D,EAAN,CAAF;IACzB,CAFD;EAGD;;EAEDqF,WAAW,CAAEzC,MAAF,EAAUsD,EAAV,EAAc;IACvB,KAAK1D,cAAL,CAAoBI,MAApB,EAA4BiD,EAA5B,CAA+B,cAA/B,EAA+C,CAACM,YAAD,EAAevH,QAAf,KAA4B;MACzE,IAAIgE,MAAM,KAAKuD,YAAf,EAA6B;QAC3BD,EAAE,CAACtH,QAAD,CAAF;MACD;IACF,CAJD;EAKD;;EAED8G,OAAO,CAAE9C,MAAF,EAAUsD,EAAV,EAAc;IACnB,KAAK1D,cAAL,CAAoBI,MAApB,EAA4BiD,EAA5B,CAA+B,cAA/B,EAAgDM,YAAD,IAAkB;MAC/D,IAAIvD,MAAM,KAAKuD,YAAf,EAA6B;QAC3BD,EAAE;MACH;IACF,CAJD;EAKD;;EAEDN,UAAU,CAAEhD,MAAF,EAAUsD,EAAV,EAAc;IACtB,KAAK1D,cAAL,CAAoBI,MAApB,EAA4BiD,EAA5B,CAA+B,WAA/B,EAA4C,MAAM;MAChD,IAAI,CAAC,KAAKjG,IAAL,CAAUG,OAAV,CAAkB6C,MAAlB,CAAL,EAAgC;MAChCsD,EAAE;IACH,CAHD;EAID;;EAEDX,UAAU,CAAE3C,MAAF,EAAUsD,EAAV,EAAc;IACtB,KAAK1D,cAAL,CAAoBI,MAApB,EAA4BiD,EAA5B,CAA+B,WAA/B,EAA4C,MAAM;MAChD,IAAI,CAAC,KAAKjG,IAAL,CAAUG,OAAV,CAAkB6C,MAAlB,CAAL,EAAgC;MAChCsD,EAAE;IACH,CAHD;EAID;;EAEDV,WAAW,CAAE5C,MAAF,EAAUwD,YAAV,EAAwB;IAAA;;IACjC,KAAK5D,cAAL,CAAoBI,MAApB,EAA4BiD,EAA5B,CAA+B,YAA/B,EAA6C,YAAa;MACxD,IAAI,CAAC,MAAI,CAACjG,IAAL,CAAUG,OAAV,CAAkB6C,MAAlB,CAAL,EAAgC;MAChCwD,YAAY,CAAC,YAAD,CAAZ;IACD,CAHD;EAID;;EAEDX,WAAW,CAAE7C,MAAF,EAAUsD,EAAV,EAAc;IACvB,KAAK1D,cAAL,CAAoBI,MAApB,EAA4BiD,EAA5B,CAA+B,YAA/B,EAA6C,MAAM;MACjD,IAAI,CAAC,KAAKjG,IAAL,CAAUG,OAAV,CAAkB6C,MAAlB,CAAL,EAAgC;MAChCsD,EAAE;IACH,CAHD;EAID;;EAEDG,OAAO,GAAI;IACT,MAAM;MAAEC;IAAF,IAAmB,KAAK1G,IAAL,CAAU2G,QAAV,EAAzB;IACA,KAAK3G,IAAL,CAAU4G,QAAV,CAAmB;MACjBF,YAAY,EAAE,EACZ,GAAGA,YADS;QAEZG,gBAAgB,EAAE;MAFN;IADG,CAAnB;IAMA,KAAK7G,IAAL,CAAU8G,eAAV,6BAA0B,IAA1B;IACA,KAAK9G,IAAL,CAAU+G,WAAV,6BAAsB,IAAtB;EACD;;EAEDC,SAAS,GAAI;IACX,MAAM;MAAEN;IAAF,IAAmB,KAAK1G,IAAL,CAAU2G,QAAV,EAAzB;IACA,KAAK3G,IAAL,CAAU4G,QAAV,CAAmB;MACjBF,YAAY,EAAE,EACZ,GAAGA,YADS;QAEZG,gBAAgB,EAAE;MAFN;IADG,CAAnB;IAMA,KAAK7G,IAAL,CAAUiH,kBAAV,6BAA6B,IAA7B;IACA,KAAKjH,IAAL,CAAUkH,cAAV,6BAAyB,IAAzB;EACD;;AAjlBoD;;sBAqPxC7K,I,EAAM;EAAA;;EACjB,OAAO,IAAIoB,OAAJ,CAAY,CAAC6B,OAAD,EAAU0E,MAAV,KAAqB;IACtC,MAAM7D,OAAO,GAAG,MAAM,KAAKH,IAAL,CAAUG,OAAV,CAAkB9D,IAAI,CAAC+D,EAAvB,KAA8B/D,IAApD;;IAEA,MAAMoC,UAAU,GAAG,CAAC0I,aAAD,EAAgBC,UAAhB,KAA+B;MAChD,KAAKpH,IAAL,CAAU2B,IAAV,CAAe,iBAAf,EAAkCtF,IAAlC,EAAwC;QACtCgL,QAAQ,EAAE,IAD4B;QAEtCF,aAFsC;QAGtCC;MAHsC,CAAxC;IAKD,CAND;;IAQA,MAAME,OAAO,GAAIzI,GAAD,IAAS;MACvB,KAAKmB,IAAL,CAAUuH,GAAV,CAAc1I,GAAd;MACA,KAAKmB,IAAL,CAAU2B,IAAV,CAAe,cAAf,EAA+BtF,IAA/B,EAAqCwC,GAArC;MAEA,KAAKkE,uBAAL,CAA6B1G,IAAI,CAAC+D,EAAlC;MACA4D,MAAM,CAACnF,GAAD,CAAN;IACD,CAND;;IAQA,MAAM2I,SAAS,GAAIvK,MAAD,IAAY;MAC5B,MAAMmJ,UAAU,GAAG;QACjBxH,IAAI,EAAE,EACJ,GAAG3B;QADC,CADW;QAIjBoJ,SAAS,EAAEpJ,MAAM,CAACwK;MAJD,CAAnB;MAOA,KAAK1E,uBAAL,CAA6B1G,IAAI,CAAC+D,EAAlC;MAEA,KAAKJ,IAAL,CAAU2B,IAAV,CAAe,gBAAf,EAAiCxB,OAAO,EAAxC,EAA4CiG,UAA5C;;MAEA,IAAInJ,MAAM,CAACwK,QAAX,EAAqB;QACnB,KAAKzH,IAAL,CAAUuH,GAAV,CAAe,YAAWlL,IAAI,CAACuH,IAAK,SAAQ3G,MAAM,CAACwK,QAAS,EAA5D;MACD;;MAEDnI,OAAO;IACR,CAjBD;;IAmBA,MAAMoI,cAAc,GAAIC,IAAD,IAAU;MAC/B,KAAK3H,IAAL,CAAU2B,IAAV,CAAe,4BAAf,EAA6CxB,OAAO,EAApD,EAAwDwH,IAAxD;IACD,CAFD;;IAIA,MAAMjD,MAAM,GAAG,IAAIrK,iBAAJ,CAAsBgC,IAAI,CAACG,IAA3B,EAAiC;MAC9C;MACAoL,aAAa,8BAAE,IAAF,6DAFiC;MAI9CL,GAAG,EAAE;QAAA,OAAa,MAAI,CAACvH,IAAL,CAAUuH,GAAV,CAAc,YAAd,CAAb;MAAA,CAJyC;MAK9CM,YAAY,EAAE,KAAK5H,IAAL,CAAU4H,YAAV,GAAyB,KAAK5H,IAAL,CAAU4H,YAAV,CAAuBzF,IAAvB,CAA4B,IAA5B,CAAzB,GAA6D,IAL7B;MAO9C3D,UAP8C;MAQ9C6I,OAR8C;MAS9CE,SAT8C;MAU9CE,cAV8C;MAY9CrL,IAZ8C;MAc9C,GAAGA,IAAI,CAACiE;IAdsC,CAAjC,CAAf;IAiBA,KAAKoC,SAAL,CAAerG,IAAI,CAAC+D,EAApB,IAA0BsE,MAA1B;IACA,KAAK9B,cAAL,CAAoBvG,IAAI,CAAC+D,EAAzB,IAA+B,IAAIvG,YAAJ,CAAiB,KAAKmG,IAAtB,CAA/B;IAEA,KAAKwF,YAAL,CAAkBnJ,IAAI,CAAC+D,EAAvB,EAA4B0H,OAAD,IAAa;MACtCpD,MAAM,CAAC/H,KAAP;MACA,KAAKoG,uBAAL,CAA6B1G,IAAI,CAAC+D,EAAlC,EAAsC;QAAEzD,KAAK,EAAE;MAAT,CAAtC;MACA2C,OAAO,CAAE,UAASwI,OAAO,CAAC1H,EAAG,cAAtB,CAAP;IACD,CAJD;IAMA,KAAKwF,WAAL,CAAiBvJ,IAAI,CAAC+D,EAAtB,EAA0B,kBAAqB;MAAA,IAApB;QAAEnF;MAAF,CAAoB,uBAAP,EAAO;;MAC7C,IAAIA,MAAM,KAAK,MAAf,EAAuB;QACrByJ,MAAM,CAAC/H,KAAP;;QACA,MAAI,CAACoG,uBAAL,CAA6B1G,IAAI,CAAC+D,EAAlC,EAAsC;UAAEzD,KAAK,EAAE;QAAT,CAAtC;MACD;;MACD2C,OAAO,CAAE,UAASjD,IAAI,CAAC+D,EAAG,eAAnB,CAAP;IACD,CAND;IAQA,KAAKqF,WAAL,CAAiBpJ,IAAI,CAAC+D,EAAtB,EAA2BpB,QAAD,IAAc;MACtC,IAAIA,QAAJ,EAAc;QACZ0F,MAAM,CAAChF,KAAP;MACD,CAFD,MAEO;QACLgF,MAAM,CAACqD,KAAP;MACD;IACF,CAND;IAQA,KAAKpC,UAAL,CAAgBtJ,IAAI,CAAC+D,EAArB,EAAyB,MAAM;MAC7BsE,MAAM,CAAChF,KAAP;IACD,CAFD;IAIA,KAAKmG,WAAL,CAAiBxJ,IAAI,CAAC+D,EAAtB,EAA0B,MAAM;MAC9BsE,MAAM,CAACqD,KAAP;IACD,CAFD;IAIArD,MAAM,CAACqD,KAAP;EACD,CA7FM,CAAP;AA8FD;;8BA2BoB1L,I,EAAM;EACzB,KAAK0G,uBAAL,CAA6B1G,IAAI,CAAC+D,EAAlC;;EAEA,IAAI;IACF,IAAI/D,IAAI,CAAC+I,WAAT,EAAsB;MACpB,OAAO,MAAM,KAAKF,qBAAL,CAA2B7I,IAA3B,CAAb;IACD;;IACD,MAAM+I,WAAW,GAAG,kCAAM,IAAN,sDAAoC/I,IAApC,CAApB;IAEA,IAAI,CAAC,KAAK2D,IAAL,CAAU2G,QAAV,GAAqBpF,KAArB,CAA2BlF,IAAI,CAAC+D,EAAhC,CAAL,EAA0C,OAAOkB,SAAP;IAE1C,KAAKtB,IAAL,CAAUK,YAAV,CAAuBhE,IAAI,CAAC+D,EAA5B,EAAgC;MAAEgF;IAAF,CAAhC;IACA,OAAO,MAAM,KAAKF,qBAAL,CAA2B,KAAKlF,IAAL,CAAUG,OAAV,CAAkB9D,IAAI,CAAC+D,EAAvB,CAA3B,CAAb;EACD,CAVD,CAUE,OAAOvB,GAAP,EAAY;IACZ,KAAKmB,IAAL,CAAUK,YAAV,CAAuBhE,IAAI,CAAC+D,EAA5B,EAAgC;MAAEgF,WAAW,EAAE9D;IAAf,CAAhC;IACA,KAAKtB,IAAL,CAAU2B,IAAV,CAAe,cAAf,EAA+BtF,IAA/B,EAAqCwC,GAArC;IACA,MAAMA,GAAN;EACD;AACF;;AAjYkBkB,c,CACZiI,O,GAAU5N,WAAW,CAAC6N,O"}